"use strict";(self.webpackChunkvulkan_doc=self.webpackChunkvulkan_doc||[]).push([[8130],{7735:r=>{r.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/17.vulkan_msaa_resolvemode","metadata":{"permalink":"/blog/17.vulkan_msaa_resolvemode","source":"@site/blog/17.vulkan_msaa_resolvemode.md","title":"vulkan\u4e2d\u7684MSAA resolvemode","description":"VKRESOLVEMODEAVERAGEBIT \u662f Vulkan \u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\uff08MSAA\uff09 \u89e3\u6790\uff08resolve\uff09\u64cd\u4f5c\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u5b83\u7684\u4f5c\u7528\u662f \u5bf9\u591a\u4e2a\u91c7\u6837\u70b9\u7684\u989c\u8272\u503c\u6c42\u5e73\u5747\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u89e3\u6790\u76ee\u6807\uff08resolve attachment\uff09\u4e2d\u3002","date":"2025-03-01T17:49:18.000Z","tags":[{"inline":true,"label":"\u56fe\u5f62\u57fa\u7840","permalink":"/blog/tags/\u56fe\u5f62\u57fa\u7840"}],"readingTime":3.305,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"vulkan\u4e2d\u7684MSAA resolvemode","categories":["Vulkan\u6280\u672f"],"tags":["\u56fe\u5f62\u57fa\u7840"],"date":"2025-03-01T17:49:18.000Z","authors":"sumcai"},"unlisted":false,"nextItem":{"title":"\u4ec0\u4e48\u662fMSAA","permalink":"/blog/16.msaa"}},"content":"`VK_RESOLVE_MODE_AVERAGE_BIT` \u662f Vulkan **\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\uff08MSAA\uff09** \u89e3\u6790\uff08resolve\uff09\u64cd\u4f5c\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u5b83\u7684\u4f5c\u7528\u662f **\u5bf9\u591a\u4e2a\u91c7\u6837\u70b9\u7684\u989c\u8272\u503c\u6c42\u5e73\u5747**\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u89e3\u6790\u76ee\u6807\uff08resolve attachment\uff09\u4e2d\u3002\\r\\n\\r\\n------\\r\\n\\r\\n## **1. \u4e3a\u4ec0\u4e48\u9700\u8981 `VK_RESOLVE_MODE_AVERAGE_BIT`\uff1f**\\r\\n\\r\\n\u5728 **MSAA** \u6e32\u67d3\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u4e2a\u50cf\u7d20\u5177\u6709\u591a\u4e2a\u5b50\u91c7\u6837\u70b9\uff08multi-sample points\uff09\uff0c\u4f46\u6700\u7ec8\u5c4f\u5e55\u53ea\u80fd\u663e\u793a\u4e00\u4e2a\u989c\u8272\u503c\u3002\u56e0\u6b64\uff0c\u5728 **MSAA \u89e3\u6790\u9636\u6bb5**\uff08resolve\uff09\uff0c\u9700\u8981\u5c06 **\u591a\u91c7\u6837\u989c\u8272\u7f13\u51b2\u8f6c\u6362\u4e3a\u5355\u91c7\u6837\u7f13\u51b2**\uff0c\u8fd9\u901a\u5e38\u4f1a\u4f7f\u7528 **\u89e3\u6790\u6a21\u5f0f\uff08resolve mode\uff09** \u6765\u51b3\u5b9a\u5982\u4f55\u8ba1\u7b97\u6700\u7ec8\u989c\u8272\u3002\\r\\n\\r\\n`VK_RESOLVE_MODE_AVERAGE_BIT` \u5177\u4f53\u4f5c\u7528\uff1a\\r\\n\\r\\n- **\u5bf9\u6240\u6709\u91c7\u6837\u70b9\u7684\u989c\u8272\u503c\u6c42\u5e73\u5747**\uff0c\u5f97\u5230\u4e00\u4e2a\u5e73\u6ed1\u8fc7\u6e21\u7684\u6700\u7ec8\u989c\u8272\u3002\\r\\n- **\u9002\u7528\u4e8e\u989c\u8272\u7f13\u51b2\u7684\u89e3\u6790\uff08color resolve\uff09**\uff0c\u51cf\u5c11\u56e0\u6297\u952f\u9f7f\u5e26\u6765\u7684\u8fb9\u7f18\u9510\u5ea6\u635f\u5931\u3002\\r\\n- **\u63d0\u9ad8\u89c6\u89c9\u5e73\u6ed1\u5ea6**\uff0c\u5c24\u5176\u9002\u7528\u4e8e\u9ad8\u5bf9\u6bd4\u5ea6\u7684\u8fb9\u7f18\u3002\\r\\n\\r\\n------\\r\\n\\r\\n## **2. \u4ee3\u7801\u793a\u4f8b**\\r\\n\\r\\n\u5728 Vulkan \u521b\u5efa **\u591a\u91c7\u6837\u989c\u8272\u7f13\u51b2\uff08MSAA color attachment\uff09** \u5e76\u89e3\u6790\u65f6\uff0c\u53ef\u4ee5\u8fd9\u6837\u8bbe\u7f6e\uff1a\\r\\n\\r\\n```\\r\\ncpp\u590d\u5236\u7f16\u8f91VkSubpassDescription subpass = {};\\r\\nsubpass.colorAttachmentCount = 1;\\r\\nsubpass.pColorAttachments = &colorAttachmentRef;\\r\\nsubpass.pResolveAttachments = &resolveAttachmentRef;\\r\\n```\\r\\n\\r\\n**\u6307\u5b9a `VK_RESOLVE_MODE_AVERAGE_BIT` \u89e3\u6790\u6a21\u5f0f\uff1a**\\r\\n\\r\\n```\\r\\ncpp\u590d\u5236\u7f16\u8f91VkSubpassDescription2 subpass = {};\\r\\nsubpass.pResolveAttachments = &resolveAttachmentRef;\\r\\n\\r\\nVkAttachmentDescription2 resolveAttachment = {};\\r\\nresolveAttachment.format = VK_FORMAT_R8G8B8A8_UNORM;\\r\\nresolveAttachment.samples = VK_SAMPLE_COUNT_1_BIT;  // \u89e3\u6790\u5230\u5355\u91c7\u6837\\r\\nresolveAttachment.loadOp = VK_ATTACHMENT_LOAD_OP_DONT_CARE;\\r\\nresolveAttachment.storeOp = VK_ATTACHMENT_STORE_OP_STORE;\\r\\nresolveAttachment.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;\\r\\nresolveAttachment.finalLayout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;\\r\\n\\r\\nVkAttachmentReference2 resolveAttachmentRef = {};\\r\\nresolveAttachmentRef.attachment = 1;  // \u89e3\u6790\u9644\u4ef6\u7d22\u5f15\\r\\nresolveAttachmentRef.layout = VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL;\\r\\nresolveAttachmentRef.resolveMode = VK_RESOLVE_MODE_AVERAGE_BIT;\\r\\n```\\r\\n\\r\\n------\\r\\n\\r\\n## **3. `VK_RESOLVE_MODE_AVERAGE_BIT` vs. \u5176\u4ed6\u89e3\u6790\u6a21\u5f0f**\\r\\n\\r\\nVulkan \u63d0\u4f9b\u4e86\u591a\u79cd\u89e3\u6790\u6a21\u5f0f\uff0c\u6bcf\u79cd\u9002\u7528\u4e8e\u4e0d\u540c\u7684\u6e32\u67d3\u9700\u6c42\uff1a\\r\\n\\r\\n| **\u89e3\u6790\u6a21\u5f0f**                      | **\u4f5c\u7528**                                         |\\r\\n| --------------------------------- | ------------------------------------------------ |\\r\\n| `VK_RESOLVE_MODE_NONE`            | \u4e0d\u8fdb\u884c\u89e3\u6790                                       |\\r\\n| `VK_RESOLVE_MODE_SAMPLE_ZERO_BIT` | \u76f4\u63a5\u9009\u53d6\u7b2c\u4e00\u4e2a\u91c7\u6837\u70b9\u7684\u503c                         |\\r\\n| `VK_RESOLVE_MODE_AVERAGE_BIT`     | **\u8ba1\u7b97\u6240\u6709\u91c7\u6837\u70b9\u7684\u5e73\u5747\u503c**\uff08\u5e38\u7528\u4e8e\u989c\u8272\u7f13\u51b2\u89e3\u6790\uff09 |\\r\\n| `VK_RESOLVE_MODE_MIN_BIT`         | \u9009\u53d6\u6700\u5c0f\u989c\u8272\u503c\uff08\u9002\u7528\u4e8e\u6df1\u5ea6\u7f13\u51b2\u89e3\u6790\uff09             |\\r\\n| `VK_RESOLVE_MODE_MAX_BIT`         | \u9009\u53d6\u6700\u5927\u989c\u8272\u503c\uff08\u9002\u7528\u4e8e\u6df1\u5ea6\u7f13\u51b2\u89e3\u6790\uff09             |\\r\\n\\r\\n------\\r\\n\\r\\n## **4. \u9002\u7528\u573a\u666f**\\r\\n\\r\\n\u2705 **\u9002\u5408\u989c\u8272\u7f13\u51b2\u7684\u89e3\u6790**\\r\\n\\r\\n- \u9002\u7528\u4e8e MSAA **\u989c\u8272\u9644\u4ef6\uff08color attachment\uff09** \u89e3\u6790\uff0c\u4f7f\u5f97\u8fb9\u7f18\u66f4\u5e73\u6ed1\u3002\\r\\n- \u5bf9 **HDR \u6e32\u67d3** \u4e5f\u9002\u7528\uff0c\u53ef\u9632\u6b62\u8fc7\u5ea6\u9510\u5316\u7684\u73b0\u8c61\u3002\\r\\n\\r\\n\u274c **\u4e0d\u9002\u7528\u4e8e\u6df1\u5ea6/\u6a21\u7248\u7f13\u51b2**\\r\\n\\r\\n- \u6df1\u5ea6\u7f13\u51b2\u901a\u5e38\u7528 `VK_RESOLVE_MODE_MIN_BIT` \u6216 `VK_RESOLVE_MODE_MAX_BIT`\uff0c\u800c\u4e0d\u662f `VK_RESOLVE_MODE_AVERAGE_BIT`\uff0c\u56e0\u4e3a\u6df1\u5ea6\u503c\u4e0d\u80fd\u7b80\u5355\u5e73\u5747\u3002\\r\\n\\r\\n------\\r\\n\\r\\n## **5. \u603b\u7ed3**\\r\\n\\r\\n- `VK_RESOLVE_MODE_AVERAGE_BIT` **\u7528\u4e8e MSAA \u89e3\u6790\uff08resolve\uff09\u65f6\u8ba1\u7b97\u91c7\u6837\u70b9\u7684\u5e73\u5747\u989c\u8272\u503c**\u3002\\r\\n- **\u9002\u7528\u4e8e\u989c\u8272\u7f13\u51b2\uff08color attachments\uff09\uff0c\u53ef\u51cf\u5c11\u952f\u9f7f\uff0c\u63d0\u9ad8\u753b\u9762\u5e73\u6ed1\u5ea6**\u3002\\r\\n- **\u4e0d\u9002\u7528\u4e8e\u6df1\u5ea6/\u6a21\u677f\u7f13\u51b2\uff08depth/stencil attachments\uff09**\uff0c\u56e0\u4e3a\u6df1\u5ea6\u89e3\u6790\u901a\u5e38\u9700\u8981\u6700\u5c0f\u503c\u6216\u6700\u5927\u503c\uff0c\u800c\u975e\u5e73\u5747\u503c\u3002\\r\\n\\r\\n\ud83d\ude80 **\u5982\u679c\u4f60\u7684 Vulkan \u5e94\u7528\u4f7f\u7528 MSAA\uff0c\u5e76\u5e0c\u671b\u5e73\u6ed1\u8fc7\u6e21\u989c\u8272\u7f13\u51b2\uff0c`VK_RESOLVE_MODE_AVERAGE_BIT` \u662f\u63a8\u8350\u7684\u89e3\u6790\u6a21\u5f0f\uff01**"},{"id":"/16.msaa","metadata":{"permalink":"/blog/16.msaa","source":"@site/blog/16.msaa.md","title":"\u4ec0\u4e48\u662fMSAA","description":"MSAA\uff08Multisample Anti-Aliasing\uff0c\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\uff09 \u662f\u4e00\u79cd \u786c\u4ef6\u7ea7\u522b\u7684\u6297\u952f\u9f7f\u6280\u672f\uff0c\u7528\u4e8e\u51cf\u5c11 3D \u6e32\u67d3\u4e2d\u7684 \u952f\u9f7f\u6548\u5e94\uff08aliasing\uff09\uff0c\u7279\u522b\u662f\u5728 \u8fb9\u7f18\u5e73\u6ed1\u5904\u7406 \u65b9\u9762\u6548\u679c\u663e\u8457\u3002","date":"2025-02-28T15:47:18.000Z","tags":[{"inline":true,"label":"\u56fe\u5f62\u57fa\u7840","permalink":"/blog/tags/\u56fe\u5f62\u57fa\u7840"}],"readingTime":5.84,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"\u4ec0\u4e48\u662fMSAA","categories":["Vulkan\u6280\u672f"],"tags":["\u56fe\u5f62\u57fa\u7840"],"date":"2025-02-28T15:47:18.000Z","authors":"sumcai"},"unlisted":false,"prevItem":{"title":"vulkan\u4e2d\u7684MSAA resolvemode","permalink":"/blog/17.vulkan_msaa_resolvemode"},"nextItem":{"title":"MipMap\u4e0eLOD\u662f\u4f55\u7269\uff1f","permalink":"/blog/11.MipMap\u4e0eLOD\u662f\u4f55\u7269"}},"content":"**MSAA\uff08Multisample Anti-Aliasing\uff0c\u591a\u91cd\u91c7\u6837\u6297\u952f\u9f7f\uff09** \u662f\u4e00\u79cd **\u786c\u4ef6\u7ea7\u522b\u7684\u6297\u952f\u9f7f\u6280\u672f**\uff0c\u7528\u4e8e\u51cf\u5c11 3D \u6e32\u67d3\u4e2d\u7684 **\u952f\u9f7f\u6548\u5e94\uff08aliasing\uff09**\uff0c\u7279\u522b\u662f\u5728 **\u8fb9\u7f18\u5e73\u6ed1\u5904\u7406** \u65b9\u9762\u6548\u679c\u663e\u8457\u3002\\r\\n\\r\\n------\\r\\n\\r\\n## **1. \u4e3a\u4ec0\u4e48\u9700\u8981 MSAA\uff1f\uff08\u6297\u952f\u9f7f\u7684\u5fc5\u8981\u6027\uff09**\\r\\n\\r\\n\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\uff0c**\u50cf\u7d20\u662f\u79bb\u6563\u7684**\uff0c\u800c 3D \u573a\u666f\u4e2d\u7684\u7269\u4f53\u8fb9\u7f18\u901a\u5e38\u662f\u8fde\u7eed\u7684\u3002\u5f53\u6211\u4eec\u5c06\u8fde\u7eed\u7684\u51e0\u4f55\u8fb9\u7f18\u6620\u5c04\u5230\u6709\u9650\u7684\u50cf\u7d20\u7f51\u683c\u65f6\uff0c\u4f1a\u51fa\u73b0**\u952f\u9f7f\u6548\u5e94**\uff08aliasing\uff09\uff0c\u5982\u4e0b\u6240\u793a\uff1a\\r\\n\\r\\n\ud83d\udd33 **\u6ca1\u6709\u6297\u952f\u9f7f\u7684\u56fe\u50cf\uff1a**\\r\\n\\r\\n- \u7269\u4f53\u8fb9\u7f18\u5448\u73b0 **\u53f0\u9636\u72b6\u7684\u952f\u9f7f**\uff0c\u5f71\u54cd\u89c6\u89c9\u8d28\u91cf\u3002\\r\\n- \u8fd9\u662f\u56e0\u4e3a **\u6bcf\u4e2a\u50cf\u7d20\u53ea\u80fd\u5b58\u50a8\u4e00\u4e2a\u989c\u8272\u503c**\uff0c\u5f53\u8fb9\u7f18\u843d\u5728\u4e24\u4e2a\u50cf\u7d20\u4e4b\u95f4\u65f6\uff0c\u989c\u8272\u4f1a\u51fa\u73b0\u4e0d\u8fde\u7eed\u7684\u8df3\u53d8\u3002\\r\\n\\r\\n**\u2705 \u6297\u952f\u9f7f\u540e\uff1a**\\r\\n\\r\\n- \u901a\u8fc7**\u989c\u8272\u6df7\u5408**\u6280\u672f\uff0c\u8fb9\u7f18\u8fc7\u6e21\u66f4\u52a0\u5e73\u6ed1\u3002\\r\\n- MSAA \u901a\u8fc7 **\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e2d\u589e\u52a0\u591a\u4e2a\u91c7\u6837\u70b9**\uff0c\u5e76\u8ba1\u7b97\u52a0\u6743\u5e73\u5747\u503c\uff0c\u4ece\u800c\u51cf\u5c11\u952f\u9f7f\u3002\\r\\n\\r\\n------\\r\\n\\r\\n## **2. MSAA \u7684\u57fa\u672c\u539f\u7406**\\r\\n\\r\\n### **\u666e\u901a\u6e32\u67d3 vs MSAA**\\r\\n\\r\\n| **\u65b9\u6cd5**      | **\u50cf\u7d20\u91c7\u6837\u65b9\u5f0f**                                             | **\u6548\u679c**   |\\r\\n| ------------- | ------------------------------------------------------------ | ---------- |\\r\\n| **\u666e\u901a\u6e32\u67d3**  | 1 \u4e2a\u50cf\u7d20 \u2192 1 \u4e2a\u989c\u8272\u6837\u672c                                      | \ud83d\udeab \u952f\u9f7f\u660e\u663e |\\r\\n| **MSAA (4x)** | 1 \u4e2a\u50cf\u7d20 \u2192 4 \u4e2a\u91c7\u6837\u70b9\uff0c\u6bcf\u4e2a\u91c7\u6837\u70b9\u6709\u6df1\u5ea6\u4fe1\u606f\uff0c\u4f46\u989c\u8272\u53ea\u8ba1\u7b97\u4e00\u6b21 | \u2705 \u5e73\u6ed1     |\\r\\n\\r\\n\ud83d\udd39 **MSAA \u7684\u6838\u5fc3\u601d\u60f3\uff1a**\\r\\n\\r\\n1. **\u6bcf\u4e2a\u50cf\u7d20\u7684\u591a\u4e2a\u5b50\u91c7\u6837\u70b9\uff08Subsample Points\uff09\u72ec\u7acb\u5b58\u50a8\u6df1\u5ea6\u4fe1\u606f**\u3002\\r\\n2. **\u5f53\u7247\u6bb5\u7740\u8272\u5668\uff08Fragment Shader\uff09\u8fd0\u884c\u65f6\uff0c\u5b83\u53ea\u8ba1\u7b97\u4e00\u6b21\u989c\u8272**\uff0c\u4f46\u6700\u7ec8\u7684\u989c\u8272\u4f1a\u6839\u636e\u54ea\u4e9b\u5b50\u91c7\u6837\u70b9\u88ab\u8986\u76d6\u8fdb\u884c\u6df7\u5408\u3002\\r\\n3. **\u6700\u7ec8\u50cf\u7d20\u989c\u8272\u662f\u6240\u6709\u5b50\u91c7\u6837\u70b9\u7684\u52a0\u6743\u5e73\u5747\u503c**\uff0c\u4ece\u800c\u5b9e\u73b0\u5e73\u6ed1\u8fc7\u6e21\u3002\\r\\n\\r\\n------\\r\\n\\r\\n## **3. MSAA \u7684\u4e0d\u540c\u7ea7\u522b**\\r\\n\\r\\nMSAA \u7684\u6027\u80fd\u5f00\u9500\u4e0e\u91c7\u6837\u70b9\u6570\u91cf\u6210\u6b63\u6bd4\uff0c\u5e38\u89c1\u7684 MSAA \u7ea7\u522b\u6709\uff1a\\r\\n\\r\\n| **MSAA \u7ea7\u522b**      | **\u6bcf\u50cf\u7d20\u91c7\u6837\u70b9\u6570** | **\u6027\u80fd\u5f00\u9500** | **\u6548\u679c**               |\\r\\n| ------------------ | ------------------ | ------------ | ---------------------- |\\r\\n| **1x** \uff08\u65e0 MSAA\uff09 | 1                  | \u4f4e           | \ud83d\udeab \u952f\u9f7f\u660e\u663e             |\\r\\n| **2x MSAA**        | 2                  | \u9002\u4e2d         | \ud83d\udd39 \u6709\u4e00\u5b9a\u5e73\u6ed1\u6548\u679c       |\\r\\n| **4x MSAA**        | 4                  | \u4e2d\u7b49         | \u2705 \u5e38\u89c1\uff0c\u6548\u679c\u660e\u663e       |\\r\\n| **8x MSAA**        | 8                  | \u9ad8           | \ud83d\udd25 \u753b\u8d28\u597d\u4f46\u6027\u80fd\u5f00\u9500\u5927   |\\r\\n| **16x MSAA**       | 16                 | \u5f88\u9ad8         | \ud83c\udfa8 \u975e\u5e38\u5e73\u6ed1\uff0c\u4f46\u8ba1\u7b97\u91cf\u5927 |\\r\\n\\r\\n### **\u793a\u4f8b\uff1a\u4e0d\u540c MSAA \u7ea7\u522b\u5bf9\u6bd4**\\r\\n\\r\\n```\\r\\nscss\u590d\u5236\u7f16\u8f91[1x MSAA]  \u2588\u2588\u2588\u2588\u25a0\u25a0\u25a0\u25a0\u2588\u2588\u2588\u2588     (\u4e25\u91cd\u952f\u9f7f)\\r\\n[2x MSAA]  \u2588\u2588\u2588\u2588\u2592\u2592\u2592\u2592\u2588\u2588\u2588\u2588     (\u7a0d\u5fae\u5e73\u6ed1)\\r\\n[4x MSAA]  \u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588     (\u660e\u663e\u5e73\u6ed1)\\r\\n[8x MSAA]  \u2588\u2588\u2588\u2588\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588     (\u975e\u5e38\u5e73\u6ed1)\\r\\n```\\r\\n\\r\\n- **\u9ad8 MSAA** \u63d0\u4f9b\u66f4\u597d\u7684\u8fb9\u7f18\u5e73\u6ed1\u6548\u679c\uff0c\u4f46\u4e5f\u589e\u52a0\u4e86 GPU \u8ba1\u7b97\u8d1f\u62c5\u3002\\r\\n- **\u4e00\u822c\u6e38\u620f\u6216\u5e94\u7528\u5e38\u7528 4x MSAA \u4f5c\u4e3a\u6298\u4e2d\u65b9\u6848**\u3002\\r\\n\\r\\n------\\r\\n\\r\\n## **4. Vulkan \u4e2d\u7684 MSAA**\\r\\n\\r\\n\u5728 Vulkan \u91cc\uff0c**MSAA \u901a\u8fc7 `VkSampleCountFlagBits` \u8bbe\u7f6e\u91c7\u6837\u6570\u91cf**\uff1a\\r\\n\\r\\n```\\r\\ncpp\\r\\n\\r\\n\\r\\n\u590d\u5236\u7f16\u8f91\\r\\nVkSampleCountFlagBits msaaSamples = VK_SAMPLE_COUNT_4_BIT; // 4x MSAA\\r\\n```\\r\\n\\r\\n### **\u5728 Vulkan \u521b\u5efa MSAA \u989c\u8272\u7f13\u51b2**\\r\\n\\r\\n- **\u989c\u8272\u9644\u4ef6\uff08Color Attachment\uff09** \u9700\u8981\u4f7f\u7528\u591a\u91c7\u6837\uff1a\\r\\n\\r\\n```\\r\\ncpp\u590d\u5236\u7f16\u8f91VkAttachmentDescription colorAttachment = {};\\r\\ncolorAttachment.samples = VK_SAMPLE_COUNT_4_BIT; // \u4f7f\u7528 4x MSAA\\r\\n```\\r\\n\\r\\n- **\u89e3\u6790\u9644\u4ef6\uff08Resolve Attachment\uff09** \u8d1f\u8d23\u4ece **\u591a\u91c7\u6837\u8f6c\u6362\u4e3a\u5355\u91c7\u6837**\uff1a\\r\\n\\r\\n```\\r\\ncpp\u590d\u5236\u7f16\u8f91VkAttachmentDescription resolveAttachment = {};\\r\\nresolveAttachment.samples = VK_SAMPLE_COUNT_1_BIT; // \u89e3\u6790\u5230\u5355\u91c7\u6837\\r\\n```\\r\\n\\r\\n- **\u5728\u6e32\u67d3\u901a\u9053\uff08Render Pass\uff09\u4e2d\u6307\u5b9a\u89e3\u6790\u76ee\u6807**\uff1a\\r\\n\\r\\n```\\r\\ncpp\\r\\n\\r\\n\\r\\n\u590d\u5236\u7f16\u8f91\\r\\nsubpass.pResolveAttachments = &resolveAttachmentRef;\\r\\n```\\r\\n\\r\\n\ud83d\udca1 **MSAA \u989c\u8272\u7f13\u51b2\u4e0d\u4f1a\u76f4\u63a5\u6e32\u67d3\u5230\u5c4f\u5e55\u4e0a\uff0c\u9700\u8981\u89e3\u6790\u5230\u5355\u91c7\u6837\u7f13\u51b2\uff01**\\r\\n\\r\\n------\\r\\n\\r\\n## **5. MSAA \u7684\u4f18\u7f3a\u70b9**\\r\\n\\r\\n| **\u4f18\u70b9**                   | **\u7f3a\u70b9**                           |\\r\\n| -------------------------- | ---------------------------------- |\\r\\n| \u2705 \u63d0\u9ad8\u8fb9\u7f18\u5e73\u6ed1\u5ea6\uff0c\u51cf\u5c11\u952f\u9f7f | \u274c \u6027\u80fd\u6d88\u8017\u8f83\u9ad8                     |\\r\\n| \u2705 \u786c\u4ef6\u7ea7\u4f18\u5316\uff0c\u652f\u6301\u5e7f\u6cdb     | \u274c \u4e0d\u80fd\u51cf\u5c11\u7eb9\u7406\u91c7\u6837\u5bfc\u81f4\u7684\u952f\u9f7f       |\\r\\n| \u2705 \u517c\u5bb9\u5927\u591a\u6570 GPU \u548c API    | \u274c \u4ec5\u5bf9\u51e0\u4f55\u8fb9\u7f18\u751f\u6548\uff0c\u5bf9\u900f\u660e\u7eb9\u7406\u65e0\u6548 |\\r\\n\\r\\n------\\r\\n\\r\\n## **6. MSAA vs \u5176\u4ed6\u6297\u952f\u9f7f\u6280\u672f**\\r\\n\\r\\n| **\u6297\u952f\u9f7f\u6280\u672f**                    | **\u65b9\u5f0f**                   | **\u4f18\u7f3a\u70b9**                           |\\r\\n| --------------------------------- | -------------------------- | ------------------------------------ |\\r\\n| **MSAA\uff08\u591a\u91cd\u91c7\u6837\uff09**              | \u4ec5\u5bf9\u51e0\u4f55\u8fb9\u7f18\u91c7\u6837\uff0c\u5e73\u5747\u989c\u8272 | \u2705 \u753b\u8d28\u597d\uff0c\u786c\u4ef6\u652f\u6301\uff1b\u274c \u5bf9\u900f\u660e\u7eb9\u7406\u65e0\u6548 |\\r\\n| **SSAA\uff08\u8d85\u91c7\u6837\uff0cSuperSampling\uff09** | \u6574\u4e2a\u573a\u666f\u653e\u5927\u6e32\u67d3\u518d\u7f29\u5c0f     | \u2705 \u753b\u8d28\u6700\u597d\uff1b\u274c \u8ba1\u7b97\u91cf\u5de8\u5927             |\\r\\n| **FXAA\uff08\u5feb\u901f\u8fd1\u4f3c\u6297\u952f\u9f7f\uff09**        | \u7eb9\u7406\u540e\u5904\u7406                 | \u2705 \u8ba1\u7b97\u5feb\uff0c\u9002\u5408\u4f4e\u7aef GPU\uff1b\u274c \u6a21\u7cca       |\\r\\n| **TAA\uff08\u65f6\u95f4\u6297\u952f\u9f7f\uff09**             | \u7ed3\u5408\u524d\u4e00\u5e27\u4fe1\u606f\u8fdb\u884c\u5e73\u6ed1     | \u2705 \u5bf9\u52a8\u6001\u753b\u9762\u66f4\u6709\u6548\uff1b\u274c \u53ef\u80fd\u5bfc\u81f4\u62d6\u5f71   |\\r\\n\\r\\n------\\r\\n\\r\\n## **7. \u603b\u7ed3**\\r\\n\\r\\n- **MSAA \u662f\u4e00\u79cd GPU \u786c\u4ef6\u652f\u6301\u7684\u6297\u952f\u9f7f\u6280\u672f\uff0c\u4e13\u6ce8\u4e8e\u51e0\u4f55\u8fb9\u7f18\u7684\u5e73\u6ed1\u5904\u7406\u3002**\\r\\n- **\u5b83\u901a\u8fc7\u5728\u50cf\u7d20\u5185\u4f7f\u7528\u591a\u4e2a\u5b50\u91c7\u6837\u70b9\u6765\u51cf\u5c11\u952f\u9f7f\u6548\u5e94\uff0c\u5e76\u4e14\u5bf9\u6027\u80fd\u7684\u5f71\u54cd\u6bd4 SSAA \u5c0f\uff0c\u4f46\u4ecd\u7136\u6bd4 FXAA \u548c TAA \u8981\u9ad8\u3002**\\r\\n- **Vulkan \u5141\u8bb8\u901a\u8fc7 `VkSampleCountFlagBits` \u8f7b\u677e\u542f\u7528 MSAA\uff0c\u5e76\u901a\u8fc7 `resolve attachment` \u89e3\u6790\u5230\u6700\u7ec8\u5e27\u7f13\u51b2\u3002**\\r\\n- **\u5728\u6e38\u620f\u6216\u56fe\u5f62\u5e94\u7528\u4e2d\uff0c4x MSAA \u901a\u5e38\u662f\u4e00\u4e2a\u6027\u80fd\u548c\u753b\u8d28\u7684\u6298\u4e2d\u65b9\u6848\u3002**\\r\\n\\r\\n\ud83d\ude80 **\u5728 Vulkan \u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u4f60\u9700\u8981\u6297\u952f\u9f7f\u4f46\u53c8\u60f3\u517c\u987e\u6027\u80fd\uff0c4x MSAA \u662f\u4e00\u4e2a\u4e0d\u9519\u7684\u9009\u62e9\uff01**"},{"id":"/11.MipMap\u4e0eLOD\u662f\u4f55\u7269","metadata":{"permalink":"/blog/11.MipMap\u4e0eLOD\u662f\u4f55\u7269","source":"@site/blog/11.MipMap\u4e0eLOD\u662f\u4f55\u7269.md","title":"MipMap\u4e0eLOD\u662f\u4f55\u7269\uff1f","description":"MipMap\u4e0eLOD\u662f\u4f55\u7269\uff1f","date":"2024-10-07T14:52:25.000Z","tags":[{"inline":true,"label":"\u56fe\u5f62\u57fa\u7840","permalink":"/blog/tags/\u56fe\u5f62\u57fa\u7840"}],"readingTime":4.865,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"MipMap\u4e0eLOD\u662f\u4f55\u7269\uff1f","categories":["Vulkan\u6280\u672f"],"tags":["\u56fe\u5f62\u57fa\u7840"],"date":"2024-10-07T14:52:25.000Z","authors":"sumcai"},"unlisted":false,"prevItem":{"title":"\u4ec0\u4e48\u662fMSAA","permalink":"/blog/16.msaa"},"nextItem":{"title":"\u521b\u5efadepth/stencil attachment","permalink":"/blog/14.\u521b\u5efadepthstencil attachment"}},"content":"MipMap\u4e0eLOD\u662f\u4f55\u7269\uff1f\\r\\n\\r\\n## LOD:\u6a21\u578b\u91d1\u5b57\u5854\\r\\n\\r\\nLOD\uff1a\u5168\u79f0Level Of Detail\uff0c\u4e2d\u6587\u7ffb\u8bd1\u201c\u7ec6\u8282\u7ea7\u522b\u6e10\u53d8\u201d\uff0c\u987e\u540d\u601d\u4e49\uff0c\u4e0d\u540c\u7684\u7ea7\u522b\u5c55\u793a\u4e0d\u540c\u7684\u7ec6\u8282\uff0c\u90a3\u4e48\u7a76\u7adf\u8fd9\u4e2a\u6280\u672f\u662f\u5982\u4f55\u8fd0\u7528\u5728\u6e38\u620f\u9879\u76ee\u4e2d\u7684\u5462\uff1f\u901a\u8fc7\u4f8b\u5b50\u6211\u4eec\u6765\u5b66\u4e60\u4e00\u4e0b\u3002\u5173\u4e8e\u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u8fd9\u4e2a\u6280\u672f\uff0c\u548c\u6e38\u620f\u4f18\u5316\u662f\u5bc6\u4e0d\u53ef\u5206\u7684\uff0c\u4f7f\u7528\u8fd9\u4e2a\u6280\u672f\u53ef\u4ee5\u51cf\u5c11\u9700\u8981\u5904\u7406\u7684\u6a21\u578b\u9876\u70b9\u6570\u76ee\uff0c\u964d\u4f4eGPU\u6027\u80fd\u74f6\u9888\u7684\u98ce\u9669\u3002\\r\\n\\r\\n\u539f\u7406\uff1a\u5f53\u6a21\u578b\u79bb\u6444\u50cf\u673a\uff08\u53ef\u4ee5\u662f\u4eba\u7269\u6444\u50cf\u673a\u6216\u5176\u4ed6\u6444\u50cf\u673a\uff09\u5f88\u8fdc\u65f6\uff0c\u7136\u540e\u6839\u636e\u8ddd\u79bb\u7684\u8fdc\u8fd1\u4f7f\u7528\u4e0d\u540c\u6a21\u578b\u7ea7\u522b\uff0c\u8fdc\u7684\u65f6\u5019\u5c31\u9009\u62e9\u4f4e\u7ea7\u522b\u7684\u6a21\u578b\uff0c\u8fd1\u7684\u65f6\u5019\u9009\u62e9\u9ad8\u7ec6\u8282\u6a21\u578b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u51cf\u5c11\u6a21\u578b\u4e0a\u9762\u7684\u9876\u70b9\u548c\u9762\u7247\u6570\u91cf\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002\\r\\n\\r\\n\u51c6\u5907\uff1a\u51c6\u5907\u4e09\u4e2a\u76f8\u540c\u7684\u6a21\u578b\uff0c\u4f46\u662f\u8fd9\u4e09\u4e2a\u6a21\u578b\u4ed6\u4eec\u7684\u4e09\u89d2\u9762\u548c\u9876\u70b9\u6570\u90fd\u4e0d\u540c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4ee3\u8868\u4e09\u79cd\u4ece\u9ad8\u2014\u4e2d\u2014\u4f4e\u7684\u5c42\u7ea7\u3002\uff08\u7531\u4e8e\u6ca1\u6709\u627e\u5230\u6a21\u578b\u8d44\u6e90\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u6700\u80fd\u4f53\u73b0GPU\u6027\u80fd\u6d88\u8017\u7684particle\u7279\u6548\u6765\u505a\uff0crate\u5206\u522b\u662f20,10,5\uff09\\r\\n\\r\\n\u9996\u5148\u5728\u5c42\u6b21\u9762\u677f\u521b\u5efa\u4e00\u4e2aEmptyGo\uff0c\u547d\u540d\u4e3aTestLOD,\u5bf9\u4f60\u627e\u6765\u7684\u4e09\u4e2a\u6a21\u578b\u4ee5\u201c...LOD01\u201d\uff08\u7ed3\u5c3e\u5e8f\u53f7\u8868\u793a\u5c42\u7ea7\uff09\u547d\u540d\uff0c\u6700\u540e\u5168\u90e8\u62d6\u653e\u5230TestLOD\u4e0b,\u8bb0\u4f4f\u8bb0\u4f4f\uff0c\u8fd9\u4e09\u4e2a\u7269\u4f53\u4f4d\u7f6e\u8981\u5168\u90e8\u76f8\u540c\u3002\\r\\n\\r\\n![img](images/20170109234059178.jpg)\\r\\n\\r\\n![img](images/20170109231137061.jpg)\\r\\n\\r\\n\u63a5\u4e0b\u6765\u9009\u62e9TestLOD\uff0c\u6dfb\u52a0LODGroup\u7ec4\u4ef6\uff0c\u6dfb\u52a0\u5b8c\u4e8b\u7684\u7ec4\u4ef6\u9762\u677f\u5e94\u8be5\u5982\u56fe\uff1a\\r\\n\\r\\n![img](images/20170109231316039.jpg)\\r\\n\\r\\n\u5e38\u7528\u53c2\u6570\u8be6\u89e3\uff1a\\r\\n\\r\\n- FadeMode\uff1a\u8fd9\u4e2a\u8868\u793a\u6a21\u578b\u7ea7\u522b\u53d8\u5316\u65f6\u5019\u7684\u8fc7\u6e21\u65b9\u5f0f\\r\\n\\r\\n- LOD 0 ..\uff1a\u7ec6\u8282\u7ea7\u522b\uff0c\u767e\u5206\u6bd4\u8868\u793a\u6444\u50cf\u673a\u7684\u53ef\u89c1\u8303\u56f4\uff08\u8303\u56f4\u53ef\u8c03\uff09\\r\\n\\r\\n\u63a5\u4e0b\u6765\u6211\u4eec\u8fd0\u884c\u6e38\u620f\uff0c\u5728\u573a\u666f\u89c6\u56fe\u4e2d\u6211\u4eec\u624b\u52a8\u62d6\u52a8\u4e3b\u6444\u50cf\u673a\uff0c\u6253\u5f00profile\uff08\u6027\u80fd\u5206\u6790\u5668\uff09\uff0c\u53ef\u4ee5\u770b\u5230\u5728\u4e0d\u540c\u8ddd\u79bb\u7684\u65f6\u5019\uff0cGPU\u7684\u6027\u80fd\u53c2\u6570\u6709\u660e\u663e\u7684\u4e0d\u540c\uff1a\\r\\n\\r\\n![img](images/20170109234522027.jpg)\\r\\n\\r\\n\uff08\u540e\uff09\\r\\n\\r\\n![img](images/20170109234641200.jpg)\\r\\n\\r\\n\uff08\u524d\uff09\\r\\n\\r\\n![img](images/20170109234534027.jpg)\\r\\n\\r\\n\u5176\u4e2d\u7eff\u7ebf\u5c31\u8868\u793a\u6279\u5904\u7406\u6570\u76ee\uff0c\u660e\u663e\u53d1\u73b0\u540e\u9762\u7684\u6279\u5904\u7406\u6570\u76ee\u964d\u4f4e\u4e86\u4e00\u4e2a\uff0c\u84dd\u7ebf\u8868\u793apass\u6570\u76ee\uff0cpass\u6570\u76ee\u4e5f\u964d\u4f4e\u4e86\u4e00\u4e2a\uff0c\u540e\u9762\u7684\u9876\u70b9\u6570\u4e5f\u5c06\u4f4e\u4e860.1k\u3002\u4e3a\u4ec0\u4e48\u8981\u5f3a\u8c03\u8fd9\u4e2a\uff1f\u56e0\u4e3a\u6211\u4eec\u4f18\u5316\u5c31\u662f\u4ece\u51cf\u5c11DrawCall\u5f00\u59cb\u7684\uff0c\u51cf\u5c11DrawCall\u9700\u8981\u4f7f\u7528\u6279\u5904\u7406\u6280\u672f\u5f00\u59cb\u7684\u3002\\r\\n\\r\\n\\r\\n\\r\\n## MipMap\uff1a\u7eb9\u7406\u8d34\u56fe\u91d1\u5b57\u5854\\r\\n\\r\\n\u6b63\u5982\u4e0a\u9762\u6240\u8bf4\uff0cmipmap\u9488\u5bf9\u7684\u662f\u7eb9\u7406\u8d34\u56fe\uff0c\u5927\u767d\u8bdd\u5c31\u662f\uff0c\u4e00\u4e2a\u6a21\u578b\u8eab\u4e0a\u4f1a\u6709\u8d34\u56fe\uff0c\u5f53\u6211\u4eec\u5bf9\u8fd9\u4e2a\u8d34\u56fe\u4f7f\u7528\u4e86MipMap\u6280\u672f\u4e4b\u540e\uff0c\u90a3\u4e48\u5728\u6e38\u620f\u8fd0\u884c\u4e2d\u8fd9\u4e2a\u6a21\u578b\u7684\u8d34\u56fe\u4f1a\u6839\u636e\u6444\u50cf\u673a\u8ddd\u79bb\u6a21\u578b\u7684\u8fdc\u8fd1\u800c\u8c03\u6574\u4e0d\u540c\u7684\u4e0d\u540c\u8d28\u91cf\u7684\u8d34\u56fe\u663e\u793a\u3002\\r\\n\\r\\n\u5728\u8fd9\u4e2a\u6e38\u620f\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u7ed9\u4e00\u4e2a\u6a21\u578b\u8d34\u4e86\u4e00\u4e2a\u6728\u7eb9\u8d34\u56fe\uff0c\u5f53\u6211\u4eec\u6ca1\u6709\u5bf9\u8fd9\u4e2a\u8d34\u56fe\u4f7f\u7528MipMap\u6280\u672f\u7684\u65f6\u5019\uff0c\u65e0\u8bba\u6211\u4eec\u6444\u50cf\u673a\u8ddd\u79bb\u6a21\u578b\u7684\u4f4d\u7f6e\u5728\u54ea\uff0c\u8fd9\u5f20\u8d34\u56fe\u6c38\u8fdc\u90fd\u662f\u663e\u793a\u4e00\u6837\u7684\uff0c\u8fd9\u6837\u662f\u5b8c\u5168\u6ca1\u6709\u5fc5\u8981\u7684\uff0c\u6211\u4eec\u4f7f\u7528\u8fd9\u4e2a\u6280\u672f\u5c31\u662f\u4e3a\u4e86\u8ba9\u5f53\u6444\u50cf\u673a\u6bd4\u8f83\u8fdc\u7684\u65f6\u5019\uff0c\u4f60\u7528\u5728\u7cbe\u7ec6\u7684\u8d34\u56fe\u6211\u4eec\u73a9\u5bb6\u4e5f\u770b\u4e0d\u89c1\uff0c\u800c\u4e14\u8fd8\u6d6a\u8d39\u8d44\u6e90\uff0c\u63d0\u9ad8\u4e86\u6027\u80fd\u74f6\u9888\u3002\\r\\n\\r\\n![img](images/20170110165715043.jpg)\\r\\n\\r\\n![img](images/20170110165724816.jpg)\\r\\n\\r\\n![img](images/20170110165733956.jpg)\\r\\n\\r\\n\u4e0a\u9762\u5c31\u662f\u6211\u4eec\u6ca1\u6709\u5bf9\u8d34\u56fe\u4f7f\u7528MipMap\u6280\u672f\uff0c\u7136\u540e\u6d4b\u8bd5\u7684\u7ed3\u679c\uff0c\u90a3\u5f53\u6211\u4eec\u4f7f\u7528\u4e86MinMap\u6280\u672f\u4e4b\u540e\uff0c\u7ed3\u679c\u53c8\u4f1a\u662f\u4ec0\u4e48\u6837\u5b50\u7684\u5462\uff1f\\r\\n\\r\\n\u53d1\u73b0\u56fe\u7247\u5927\u5c0f\u53d8\u5927\u4e86\uff0c\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u4f7f\u7528MipMap\u6280\u672f\u4e4b\u540e\uff0c\u4f1a\u5bf9\u8fd9\u4e2a\u8d34\u56fe\u751f\u6210\u516b\u5f20\u7cbe\u5ea6\u8d28\u91cf\u4e0d\u540c\u7684\u8d34\u56fe\uff0c\u6240\u4ee5\u5185\u5b58\u5360\u7528\u53d8\u5927\u4e86\u3002\\r\\n\\r\\n\u6240\u4ee5\u5173\u4e8e\u8fd9\u4e2a\u6280\u672f\u662f\u5426\u4f7f\u7528\uff0c\u6839\u636e\u4f60\u7684\u9879\u76ee\u800c\u5b9a\uff0c\u4ec0\u4e48\u90fd\u662f\u6709\u5229\u6709\u5f0a\u7684\u3002\\r\\n\\r\\n![img](images/20170110170305167.jpg)\\r\\n\\r\\n![img](images/20170110170314843.jpg)\\r\\n\\r\\n![img](images/20170110170323108.jpg)\\r\\n\\r\\n\\r\\n\\r\\n---\\r\\n\\r\\n\u539f\u6587\u94fe\u63a5\uff1ahttps://blog.csdn.net/penchaoo/article/details/54291529"},{"id":"/14.\u521b\u5efadepthstencil attachment","metadata":{"permalink":"/blog/14.\u521b\u5efadepthstencil attachment","source":"@site/blog/14.\u521b\u5efadepthstencil attachment.md","title":"\u521b\u5efadepth/stencil attachment","description":"\u521b\u5efa\u8fc7\u7a0b","date":"2024-08-01T15:47:56.000Z","tags":[{"inline":true,"label":"\u56fe\u5f62\u57fa\u7840","permalink":"/blog/tags/\u56fe\u5f62\u57fa\u7840"}],"readingTime":1.125,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"\u521b\u5efadepth/stencil attachment","categories":["Vulkan\u6280\u672f"],"tags":["\u56fe\u5f62\u57fa\u7840"],"date":"2024-08-01T15:47:56.000Z","authors":"sumcai"},"unlisted":false,"prevItem":{"title":"MipMap\u4e0eLOD\u662f\u4f55\u7269\uff1f","permalink":"/blog/11.MipMap\u4e0eLOD\u662f\u4f55\u7269"},"nextItem":{"title":"\u521b\u5efamvp ubo","permalink":"/blog/15.\u521b\u5efamvp ubo"}},"content":"## \u521b\u5efa\u8fc7\u7a0b\\r\\n\\r\\n1. \u521b\u5efa\u4e00\u4e2adepth/stencil image\\r\\n2. \u67e5\u627eimage memory requirements\\r\\n3. \u5206\u914d\u3001\u7ed1\u5b9aimage memory\\r\\n4. \u8bbe\u7f6eimage layout\\r\\n5. \u521b\u5efadepth/stencil imageview\\r\\n\\r\\n\\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n```cpp\\r\\nVkFormat image_format = VK_FORMAT_D16_UNORM;  //\u652f\u6301depth\\\\stencil\u7684format\\r\\nVkImageCreateInfo image_info = {};\\r\\nVkFormatProperties props;\\r\\nvkGetPhysicalDeviceFormatProperties(physical_device, image_format, &props);\\r\\nif (props.linearTilingFeatures & VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT) {\\r\\n\\timage_info.tiling = VK_IMAGE_TILING_LINEAR;\\r\\n} else if (props.optimalTilingFeatures & VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT) {\\r\\n\\timage_info.tiling = VK_IMAGE_TILING_OPTIMAL;\\r\\n}\\r\\n \\r\\nimage_info.sType = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO;\\r\\nimage_info.pNext = NULL;\\r\\nimage_info.imageType = VK_IMAGE_TYPE_2D;\\r\\nimage_info.format = image_format;\\r\\nimage_info.extent.width = 64;\\r\\nimage_info.extent.height = 64;\\r\\nimage_info.extent.depth = 1;\\r\\nimage_info.mipLevels = 1;\\r\\nimage_info.arrayLayers = 1;\\r\\nimage_info.samples = VK_SAMPLE_COUNT_1_BIT;\\r\\nimage_info.initialLayout = VK_IMAGE_LAYOUT_UNDEFINED;\\r\\nimage_info.usage = VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT;\\r\\nimage_info.queueFamilyIndexCount = 0;\\r\\nimage_info.pQueueFamilyIndices = NULL;\\r\\nimage_info.sharingMode = VK_SHARING_MODE_EXCLUSIVE;\\r\\nimage_info.flags = 0;\\r\\n \\r\\nVkImage image;\\r\\nvkCreateImage(device, &image_info, NULL, &image);\\r\\n \\r\\nVkMemoryRequirements mem_reqs;\\r\\nvkGetImageMemoryRequirements(device, image, &mem_reqs);\\r\\n \\r\\nVkMemoryAllocateInfo mem_alloc = {};\\r\\nmem_alloc.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;\\r\\nmem_alloc.pNext = NULL;\\r\\nmem_alloc.memoryTypeIndex = 0;\\r\\nmem_alloc.allocationSize = mem_reqs.size;\\r\\nVkDeviceMemory mem;\\r\\nvkAllocateMemory(device, &mem_alloc, NULL, &mem);\\r\\n \\r\\nvkBindImageMemory(device, image, mem, 0)\\r\\n \\r\\nVkImageView view;\\r\\nVkImageViewCreateInfo view_info = {};\\r\\nview_info.sType = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO;\\r\\nview_info.pNext = NULL;\\r\\nview_info.image = image;\\r\\nview_info.format = image_format;\\r\\nview_info.components.r = VK_COMPONENT_SWIZZLE_R;\\r\\nview_info.components.g = VK_COMPONENT_SWIZZLE_G;\\r\\nview_info.components.b = VK_COMPONENT_SWIZZLE_B;\\r\\nview_info.components.a = VK_COMPONENT_SWIZZLE_A;\\r\\nview_info.subresourceRange.aspectMask = VK_IMAGE_ASPECT_DEPTH_BIT;  //\u6216\u8005\u662fVK_IMAGE_ASPECT_STENCIL_BIT\\r\\nview_info.subresourceRange.baseMipLevel = 0;\\r\\nview_info.subresourceRange.levelCount = 1;\\r\\nview_info.subresourceRange.baseArrayLayer = 0;\\r\\nview_info.subresourceRange.layerCount = 1;\\r\\nview_info.viewType = VK_IMAGE_VIEW_TYPE_2D;\\r\\nview_info.flags = 0;\\r\\n \\r\\nvkCreateImageView(device, &view_info, NULL, &view);\\r\\n```"},{"id":"/15.\u521b\u5efamvp ubo","metadata":{"permalink":"/blog/15.\u521b\u5efamvp ubo","source":"@site/blog/15.\u521b\u5efamvp ubo.md","title":"\u521b\u5efamvp ubo","description":"\u521b\u5efa\u8fc7\u7a0b","date":"2024-08-01T15:47:18.000Z","tags":[{"inline":true,"label":"\u56fe\u5f62\u57fa\u7840","permalink":"/blog/tags/\u56fe\u5f62\u57fa\u7840"}],"readingTime":1.04,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"\u521b\u5efamvp ubo","categories":["Vulkan\u6280\u672f"],"tags":["\u56fe\u5f62\u57fa\u7840"],"date":"2024-08-01T15:47:18.000Z","authors":"sumcai"},"unlisted":false,"prevItem":{"title":"\u521b\u5efadepth/stencil attachment","permalink":"/blog/14.\u521b\u5efadepthstencil attachment"},"nextItem":{"title":"Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b","permalink":"/blog/13.Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b"}},"content":"## \u521b\u5efa\u8fc7\u7a0b\\r\\n\\r\\n1. \u521b\u5efa\u4e00\u4e2auniform buffer\\r\\n2. \u67e5\u627ebuffer memory requirements\\r\\n3. \u5206\u914d\u3001\u7ed1\u5b9abuffer memory\\r\\n4. map buffer memory\\r\\n5. \u62f7\u8d1dmvp data to buffer memory\\r\\n6. unmap buffer memory\\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n```cpp\\r\\nglm::mat4 projection = glm::perspective(glm::radians(45.0f), 1.0f, 0.1f, 100.0f);\\r\\nglm::mat4 view = glm::lookAt(\\r\\n\\t\\t\\t\\t\\tglm::vec3(-5, 3, -10),  // \u76f8\u673a\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684\u4f4d\u7f6e\\r\\n\\t\\t\\t\\t\\tglm::vec3(0, 0, 0),     // \u770b\u5411\u7684\u76ee\u6807\u4f4d\u7f6e\\r\\n\\t\\t\\t\\t\\tglm::vec3(0, -1, 0)     // \u76f8\u673aup\u65b9\u5411\u5411\u91cf\\r\\n\\t\\t\\t\\t );\\r\\nglm::mat4 model = glm::mat4(1.0f);\\r\\nglm::mat4 clip = glm::mat4(1.0f, 0.0f, 0.0f, 0.0f,\\r\\n\\t\\t\\t\\t\\t  0.0f,-1.0f, 0.0f, 0.0f,\\r\\n\\t\\t\\t\\t\\t  0.0f, 0.0f, 0.5f, 0.0f,\\r\\n\\t\\t\\t\\t\\t  0.0f, 0.0f, 0.5f, 1.0f);\\r\\nglm::mat4 mvp = clip * projection * view * model;\\r\\n \\r\\nVkBuffer ubo;\\r\\nVkBufferCreateInfo buf_info = {};\\r\\nbuf_info.sType = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO;\\r\\nbuf_info.pNext = NULL;\\r\\nbuf_info.usage = VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT;\\r\\nbuf_info.size = sizeof(mvp);\\r\\nbuf_info.queueFamilyIndexCount = 0;\\r\\nbuf_info.pQueueFamilyIndices = NULL;\\r\\nbuf_info.sharingMode = VK_SHARING_MODE_EXCLUSIVE;\\r\\nbuf_info.flags = 0;\\r\\nvkCreateBuffer(device, &buf_info, NULL, &ubo);\\r\\n \\r\\nVkMemoryRequirements mem_reqs;\\r\\nvkGetBufferMemoryRequirements(device, ubo, &mem_reqs);\\r\\n \\r\\nVkDeviceMemory mem;\\r\\nVkMemoryAllocateInfo alloc_info = {};\\r\\nalloc_info.sType = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO;\\r\\nalloc_info.pNext = NULL;\\r\\nalloc_info.memoryTypeIndex = 0;\\r\\nalloc_info.allocationSize = mem_reqs.size;\\r\\nvkAllocateMemory(device, &alloc_info, NULL, &mem);\\r\\n \\r\\nvkBindBufferMemory(device, ubo, mem, 0);\\r\\n \\r\\nuint8_t *pData;\\r\\nvkMapMemory(device, mem, 0, mem_reqs.size, 0, (void **)&pData);\\r\\n \\r\\nmemcpy(pData, &mvp, sizeof(mvp));\\r\\n \\r\\nvkUnmapMemory(device, mem);\\r\\n```"},{"id":"/13.Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b","metadata":{"permalink":"/blog/13.Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b","source":"@site/blog/13.Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b.md","title":"Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b","description":"\u4ee3\u7801\u5b9e\u6218","date":"2023-12-28T15:11:34.000Z","tags":[{"inline":true,"label":"\u56fe\u5f62\u57fa\u7840","permalink":"/blog/tags/\u56fe\u5f62\u57fa\u7840"}],"readingTime":3.84,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b","categories":["Vulkan\u6280\u672f"],"tags":["\u56fe\u5f62\u57fa\u7840"],"date":"2023-12-28T15:11:34.000Z","authors":"sumcai"},"unlisted":false,"prevItem":{"title":"\u521b\u5efamvp ubo","permalink":"/blog/15.\u521b\u5efamvp ubo"},"nextItem":{"title":"\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5","permalink":"/blog/12.\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5"}},"content":"## \u4ee3\u7801\u5b9e\u6218\\r\\n\\r\\n\u6211\u4eec\u7528`indirect draw`\u7ed8\u52366\u4e2a\u4e0d\u540c\u4f4d\u7f6e\u7684\u4e09\u89d2\u5f62\uff0c\u6548\u679c\u5982\u4e0b\uff1a\\r\\n\\r\\n![img](images/65d40e76ed5251bbdf967ad36292d56b.png)\\r\\n\\r\\n**\u91cd\u70b9\uff1a\u5177\u5907`layout(location = xx) in` \u683c\u5f0f\u63cf\u8ff0\u7684\u8d44\u6e90\u5c31\u662f `vertex buffer`\u3002**\\r\\n\\r\\nvs shader\u5982\u4e0b\uff0c `inPos`\uff0c`inColor`\uff0c`instancePos`\u5219\u662f`vertext buffer`\u6570\u636e\uff1a\\r\\n\\r\\n```glsl\\r\\n//vs\\r\\n#version 450 \\r\\nlayout (location = 0) in vec3 inPos;\\r\\nlayout (location = 1) in vec3 inColor;\\r\\nlayout (location = 2) in vec3 instancePos;\\r\\n \\r\\nlayout(location = 0) out vec3 fragColor;\\r\\n \\r\\nvoid main() {\\r\\n    gl_Position = vec4(inPos, 1.0) + vec4(instancePos, 1.0);\\r\\n    gl_Position.y = -gl_Position.y;\\r\\n    fragColor = inColor;\\r\\n}\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n`vertex buffer`\u7684\u5e03\u5c40\u5206\u5e03\u5982\u4e0b\uff1a\\r\\n\\r\\n- `location 0`\u7684`inPos`\u3001`location 1`\u7684`inColor`\u4f7f\u7528`binding 0`\\r\\n- `location 2`\u7684`instancePos`\u4f7f\u7528`binding 1`\\r\\n\\r\\n\\r\\n\\r\\n\u4ee3\u7801\u4fa7\u8c03\u7528`vkCmdBindVertexBuffers`\u544a\u8bc9gpu\u4ece\u54ea\u4e2abinding\u4f4d\u7f6e\u8bfb\u53d6\u9876\u70b9\u6570\u636e\uff08\u5373`vkCmdBindVertexBuffers`\u7684`firstBinding`\u53c2\u6570\uff0c\u4e0eshader\u4e2d`layout`\u7684`binding`\u5b8c\u5168\u6ca1\u5173\u7cfb\uff0c\u8fd9\u70b9\u5728\u540e\u9762\u7684`descriptor`\u7ae0\u8282\u518d\u8bb2\uff09\u3002\\r\\n\\r\\ngpu\u77e5\u9053\u4e86\u4ece\u54ea\u91cc\u8bfb\u6570\u636e\uff0c\u4f46\u662f\u600e\u4e48\u8bfb\uff1f\u8fd9\u5c31\u7528\u5230\u4e86`VkVertexInputBindingDescription`\u548c `VkVertexInputAttributeDescription`\u4e24\u4e2a\u7ed3\u6784\u4f53\uff0c\u5b83\u4eec\u5728\u521b\u5efa`pipeline`\u65f6\u88ab\u4f7f\u7528\u3002\\r\\n\\r\\n\u7ed3\u6784\u4f53\u8be6\u7ec6\u8bf4\u660e\uff1a\\r\\n\\r\\n```cpp\\r\\ntypedef struct VkVertexInputBindingDescription {\\r\\n    uint32_t             binding;   //\u6570\u636e\u7ed1\u5b9a\u4f4d\u7f6e\\r\\n    uint32_t             stride;    //\u8fde\u7eed\u4e24\u4e2a\u6570\u636e\u4e4b\u95f4\u7684\u95f4\u9694\\r\\n    VkVertexInputRate    inputRate; //\u4e24\u79cd\u65b9\u5f0f\uff0c per-vertex:\u5bf9\u6bcf\u4e2a\u9876\u70b9\u8f93\u5165\uff0c per-instance:\u5bf9\u6bcf\u4e2a\u5b9e\u4f8b\u8f93\u5165\\r\\n} VkVertexInputBindingDescription; \\r\\n \\r\\ntypedef struct VkVertexInputAttributeDescription {\\r\\n    uint32_t    location;    //\u5728shader\u4e2dlocation\u4e00\u81f4\\r\\n    uint32_t    binding;     //\u6570\u636e\u7ed1\u5b9a\u4f4d\u7f6e\\r\\n    VkFormat    format;      //\u6570\u636e\u683c\u5f0f\\r\\n    uint32_t    offset;      //\u5c5e\u6027\u76f8\u5bf9\u4e8e\u9876\u70b9\u5f00\u59cb\u4f4d\u7f6e\u7684\u504f\u79fb\\r\\n} VkVertexInputAttributeDescription;\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f`VkVertexInputBindingDescription::inputRate`\uff0c \u5b83\u4ee3\u8868\u4e24\u79cd\u6570\u636e\u8f93\u5165\uff1a\\r\\n\\r\\n- VK_VERTEX_INPUT_RATE_VERTEX\uff1aper-vertex\uff0c\u6309\u56fe\u5143\u7684\u5b9a\u70b9\u6570\u5206\\r\\n- VK_VERTEX_INPUT_RATE_INSTANCE\uff1aper-instance\uff0c\u6309\u56fe\u5143\u6570\u5206\u914d\\r\\n\\r\\n\\r\\n\\r\\n\u672c\u4f8b\u753b6\u4e2a\u4e09\u89d2\u5f62\uff0c\u5bf9\u4e8e\u7f16\u53f7`i`\u7684\u4e09\u89d2\u5f62\uff0c\u4f1a\u8bfb\u53d6\u9876\u70b9\u6570\u636e`vertices[0]`,`vertices[1]`,`vertices[2]`\u4ee5\u53ca\u4e2d\u5fc3\u70b9\u4f4d\u7f6e`instancePosData[i]`\u3002\\r\\n\\r\\n\u672c\u4f8b\u5b8c\u6574\u4ee3\u7801\u8bf4\u660e\uff1a\\r\\n\\r\\n```cpp\\r\\n/* {inPosition, inColor}*/\\r\\nstruct Vertex {\\r\\n    vec3 pos;\\r\\n    vec3 color;\\r\\n}\\r\\n// vertex data of triangle\\r\\nstd::vector<Vertex> vertices = {\\r\\n    { {  0.0f,  0.2f, 0.0f }, { 1.0f, 0.0f, 0.0f } },\\r\\n    { { -0.2f, -0.2f, 0.0f }, { 0.0f, 1.0f, 0.0f } },\\r\\n    { { 0.2f,  -0.2f, 0.0f }, { 0.0f, 0.0f, 1.0f } },\\r\\n};\\r\\n// 6 triangle instance center point postion\\r\\nstd::vector<Vec3> instancePosData = {\\r\\n    {-0.45, 0.45, 0},{-0.45, -0.45, 0},{0, -0.8, 0},\\r\\n    {0.45, -0.45, 0},{0.45, 0.45, 0},{0, 0.8, 0},\\r\\n};\\r\\n \\r\\n//create vertex buffer\\r\\nVkDeviceSize vertexBufferSize = vertices.size() * sizeof(Vertex);\\r\\nVkDeviceSize instancePosBufferSize = instancePosData.size() * sizeof(Vec3);\\r\\n \\r\\ncreateBuffer(\\r\\n        VK_BUFFER_USAGE_VERTEX_BUFFER_BIT | VK_BUFFER_USAGE_TRANSFER_DST_BIT,\\r\\n        VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,\\r\\n        &vertexBuffer, &vertexMemory,\\r\\n        vertexBufferSize, vertices.data());\\r\\n                    \\r\\ncreateBuffer(\\r\\n    VK_BUFFER_USAGE_VERTEX_BUFFER_BIT | VK_BUFFER_USAGE_TRANSFER_DST_BIT,\\r\\n    VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT,\\r\\n    &instancePosBuffer, &instancePosMemory,\\r\\n    instancePosBufferSize,instancePosData.data());\\r\\n \\r\\nVkDeviceSize offsets[] = {0};\\r\\n//\u4e09\u89d2\u5f62\u9876\u70b9\u4f4d\u7f6e\u3001\u989c\u8272\u6570\u636e\u4ecebinding 0\u8bfb\u53d6\\r\\nvkCmdBindVertexBuffers(\\r\\n    commandBuffer, \\r\\n    0,    // firstBinding\\r\\n    1,    // bindingCount\\r\\n    &vertexBuffer, \\r\\n    offsets);\\r\\n \\r\\n//\u4e09\u89d2\u5f62\u7684\u4e2d\u5fc3\u70b9\u4f4d\u7f6e\u4ecebinding 1\u8bfb\u53d6\\r\\nvkCmdBindVertexBuffers(\\r\\n    commandBuffer, \\r\\n    1,    // firstBinding\\r\\n    1,    // bindingCount\\r\\n    &instancePosBuffer, \\r\\n    offsets);\\r\\n \\r\\n// \u8bfb\u53d6\u9876\u70b9\u7684\u65b9\u5f0f\u3001\u4ee5\u53ca\u9876\u70b9\u6570\u636e\u5e03\u5c40\u4f20\u5165graphicsPipelineCreateInfo\\r\\nstd::vector<VkVertexInputBindingDescription> bindingDescription = {\\r\\n    {.binding=0, .stride=sizeof(Vertex), .inputRate = VK_VERTEX_INPUT_RATE_VERTEX},   //\u9010\u9876\u70b9\u65b9\u5f0f\u83b7\u53d6\u4e09\u89d2\u5f62\u9876\u70b9\u6570\u636e\\r\\n    {.binding=1, .stride=sizeof(Vec3), .inputRate = VK_VERTEX_INPUT_RATE_INSTANCE}    //\u9010\u5b9e\u4f8b\u65b9\u5f0f\u83b7\u53d6\u4e09\u89d2\u5f62\u4f4d\u7f6e\u6570\u636e\\r\\n};\\r\\nstd::vector<VkVertexInputAttributeDescription> attributeDescriptions = \\r\\n{\\r\\n    {.binding = 0, .location = 0, .format = VK_FORMAT_R32G32B32_SFLOAT, .offset = offsetof(Vertex, pos)},   // inPos: binding 0, location 0\\r\\n    {.binding = 0, .location = 1, .format = VK_FORMAT_R32G32B32_SFLOAT, .offset = offsetof(Vertex, color)}, // inColor: binding 0, location 1\\r\\n    {.binding = 1, .location = 2, .format = VK_FORMAT_R32G32B32_SFLOAT, .offset = 0}    // instancePos: binding 1, location 2\\r\\n}\\r\\n...\\r\\nvkPipelineVertexInputStateCreateInfo.pVertexBindingDescriptions = bindingDescription.data();\\r\\nvkPipelineVertexInputStateCreateInfo.pVertexAttributeDescriptions = attributeDescriptions.data();\\r\\n...\\r\\nvkGraphicsPipelineCreateInfo.pVertexInputState = &vkPipelineVertexInputStateCreateInfo;\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n\u4e0a\u9762\u4ece\u4ee3\u7801\u5230`shader`\u7684`vertex buffer`\u6570\u636e\u7ed1\u5b9a\u8fc7\u7a0b\u53ef\u4ee5\u5f52\u7eb3\u6210\u8fd9\u5f20\u56fe\uff1a\\r\\n\\r\\n![img](images/8713daef75640687c030b03e04e8abdf.png)\\r\\n\\r\\n\u8fd9\u7bc7\u6587\u7ae0\u5bf9vertext buffer\u7684\u5904\u7406\u903b\u8f91\u8bb2\u7684\u5f88\u8be6\u7ec6\uff0c\u53ef\u4ee5\u6269\u5c55\u9605\u8bfb\u4e00\u4e0b\uff1a\\r\\n\\r\\nhttps://github.com/KhronosGroup/Vulkan-Guide/blob/main/chapters/vertex_input_data_processing.adoc"},{"id":"/12.\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5","metadata":{"permalink":"/blog/12.\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5","source":"@site/blog/12.\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5.md","title":"\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5","description":"\u80cc\u666f","date":"2023-12-28T14:59:58.000Z","tags":[{"inline":true,"label":"\u56fe\u5f62\u57fa\u7840","permalink":"/blog/tags/\u56fe\u5f62\u57fa\u7840"}],"readingTime":4.285,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5","categories":["Vulkan\u6280\u672f"],"tags":["\u56fe\u5f62\u57fa\u7840"],"date":"2023-12-28T14:59:58.000Z","authors":"sumcai"},"unlisted":false,"prevItem":{"title":"Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b","permalink":"/blog/13.Vulkan vertex buffer\u7ed1\u5b9a\u8fc7\u7a0b"},"nextItem":{"title":"Framebuffer\u7528\u6cd5","permalink":"/blog/09.Framebuffer\u7528\u6cd5"}},"content":"## \u80cc\u666f\\r\\n\\r\\n\u6700\u8fd1\u5728\u56fd\u4ea7linux\u73af\u5883\u4e0a\u9002\u914dvulkan\u5e94\u7528\uff0c\u4e00\u822c\u7cfb\u7edf\u4f1a\u81ea\u5e26`libvulkan.so.1`\u4f46\u662f\u6ca1\u6709`libvulkan.so`\uff0c\u800c`libvulkan.so.1`\u65e0\u6cd5\u901a\u8fc7find_library\u627e\u5230\uff0c\u5982\u679c\u7cfb\u7edf\u6e90\u6ca1\u6709`vulkan sdk`\u6216\u8005`vulkan loader`\uff0c\u8fd9\u65f6\u5c31\u5f97\u624b\u5de5\u4e0b\u8f7d\u4ee3\u7801\u7f16\u8bd1`vulkan sdk`\u6216\u8005`vulkan loader`\uff0c\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u8fd8\u5f97\u5b89\u88c5\u5404\u79cd\u4f9d\u8d56\uff0c\u5347\u7ea7cmake\uff0c\u975e\u5e38\u7e41\u7410\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u5c06vulkan\u52a8\u6001\u5e93\u94fe\u63a5\u5230\u76ee\u6807\u5e94\u7528\uff1a\\r\\n\\r\\n```cmake\\r\\nfind_package(Vulkan)\\r\\nif (NOT Vulkan_FOUND)\\r\\n    find_library(Vulkan_LIBRARIES NAMES vulkan REQUIRED)\\r\\nendif ()\\r\\n \\r\\ninclude_directories(${Vulkan_INCLUDE_DIRS})\\r\\ntarget_link_libraries (${PROJECT_NAME} ${Vulkan_LIBRARIES})\\r\\n```\\r\\n\\r\\n\\r\\n\u5728\u9e92\u9e9f\u3001\u9f99\u82af\u3001\u9cb2\u9e4f\u7b49\u5404\u79cd\u7cfb\u7edf\u4e0a\u90fd\u7ecf\u5386\u8fc7\u624b\u5de5\u7f16\u8bd1`vulkan sdk`\uff0c\u4e3a\u4e86\u66f4\u5feb\u7684\u6d4b\u8bd5vulkan\u517c\u5bb9\u6027\u4ee5\u53ca\u8c03\u8bd5\u5e94\u7528\uff0c\u4e00\u76f4\u5728\u627e\u66f4\u7b80\u6613\u7684\u65b9\u6cd5\u3002\\r\\n\\r\\n\u95f2\u6687\u4e4b\u4f59\u770b\u5230\u4e86\u8fd9\u7bc7\u6587\u7ae0  [WHAT IS VK_NO_PROTOTYPES](https://link.zhihu.com/?target=https%3A//djang86.blogspot.com/2019/01/what-is-vknoprototypes.html)\uff0c\u840c\u751f\u4e86\u5199\u4e00\u4e2a\u7b80\u6613\u7684vulkan\u52a8\u6001\u5e93\u52a0\u8f7d\u65b9\u6cd5\u7684\u60f3\u6cd5\uff0c\u4e0d\u7528\u5b89\u88c5`vulkan sdk`\u6216\u8005`vulkan loader`\uff0c\u76f4\u63a5\u4f7f\u7528\u7cfb\u7edf\u4e0a\u7684`libvulkan.so.1`(\u4e00\u822c\u90fd\u4f1a\u81ea\u5e26\uff0c\u6ca1\u6709\u7684\u8bdd\u6267\u884c`sudo apt install libvulkan1`\u5b89\u88c5)\u3002\\r\\n\\r\\n## \u4ee3\u7801\u793a\u4f8b\\r\\n\\r\\n\u57fa\u672c\u539f\u7406\u662f\u521d\u59cb\u5316\u65f6\u4f7f\u7528 `dlopen`\u3001`dlsym`\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u4e2d\u7684api\u51fd\u6570\u6307\u9488\uff0capp\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9bapi\uff0c\u8fd9\u91cc\u6211\u7528\u4e86\u4e00\u4e2a\u5f00\u6e90\u7684\u52a8\u6001\u5e93\u52a0\u8f7d\u5de5\u5177`dylib`\uff0c\u5b83\u652f\u6301\u591a\u7cfb\u7edf\u5e73\u53f0:\\r\\n\\r\\n[GitHub - martin-olivier/dylib: C++ cross-platform wrapper around dynamic loading of shared libraries (dll, so, dylib)](https://github.com/martin-olivier/dylib)\\r\\n\\r\\n\u4ee5`vkCreateInstance`\u51fd\u6570\u5730\u5740\u7684\u52a0\u8f7d\u8fc7\u7a0b\u4e3a\u4f8b\uff1a \\r\\n\\r\\n```cpp\\r\\n//\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\\r\\ndylib lib(\\"libvulkan.so.1\\", false);\\r\\n//\u5b9a\u4e49\u51fd\u6570\u6307\u9488vkCreateInstance, PFN_vkCreateInstance\u7684\u58f0\u660e\u5728vulkan_core.h\u4e2d\\r\\nPFN_vkCreateInstance vkCreateInstance;\\r\\n//\u4ece\u52a8\u6001\u5e93\u4e2d\u83b7\u53d6\u51fd\u6570\u5730\u5740\\r\\nauto vkCreateInstance = (PFN_vkCreateInstance)lib.get_function<PFN_vkCreateInstance>(\\"vkCreateInstance\\");\\r\\n```\\r\\n\\r\\n\u8fd9\u91cc\u6709\u4e2a\u5c0ftip\uff1a`vkCreateInstance` \u5728`vulkan_core.h`\u4e2d\u7684\u58f0\u660e\u662f\u88ab\u5b8f`VK_NO_PROTOTYPES`\u62ec\u8d77\u6765\u7684\uff0c\u6211\u4eec\u5f97\u5728cmake\u4e2d\u6dfb\u52a0\u8be5\u5b8f\u5b9a\u4e49`add_definitions(-DVK_NO_PROTOTYPES)`\uff0c\u4e0d\u8ba9 `vulkan_core.h`\u4e2d\u5bf9\u539f\u751f\u7684vk api\u8fdb\u884c\u58f0\u660e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u5728`load.h`\u4e2d\u5bf9\u539f\u751f\u7684vulkan api\u8fdb\u884c\u58f0\u660e\u4e86\u3002\\r\\n\\r\\n\\r\\n\\r\\n\u9644\u4e0a\u6574\u4e2a`load.h`\u7684\u6e90\u7801\uff0c\u5728app\u521d\u59cb\u5316\u65f6\u8c03\u7528`vk_loader_init()`\u5373\u53ef\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u4e2d\u6240\u6709\u7684\u51fd\u6570\u5730\u5740\uff1a\\r\\n\\r\\n```cpp\\r\\n#include \\"dylib/dylib.hpp\\"\\r\\n#include \\"vulkan/vulkan_core.h\\"\\r\\n \\r\\n#if defined(WIN32) || defined(_WIN32) || defined(_WIN32_) || defined(WIN64) || defined(_WIN64) || defined(_WIN64_)\\r\\n    #define VULKAN_LIB \\"vulkan-1.dll\\"\\r\\n#elif defined(ANDROID) || defined(_ANDROID_)\\r\\n    #define VULKAN_LIB \\"libvulkan.so\\"\\r\\n#else\\r\\n    #define VULKAN_LIB \\"libvulkan.so.1\\"\\r\\n#endif\\r\\n \\r\\n#define APPLY_PFN_DEF_VK_FUNCTIONS(PFN_DEF)                   \\\\\\r\\n    PFN_DEF(vkGetInstanceProcAddr)                                 \\\\\\r\\n    PFN_DEF(vkCreateInstance)                                      \\\\\\r\\n    PFN_DEF(vkEnumerateInstanceExtensionProperties)                \\\\\\r\\n    PFN_DEF(vkEnumerateInstanceLayerProperties)                    \\\\\\r\\n    PFN_DEF(vkDestroyInstance)                                     \\\\\\r\\n    PFN_DEF(vkEnumeratePhysicalDevices)                            \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceFeatures)                           \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceFormatProperties)                   \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceImageFormatProperties)              \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceProperties)                         \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceQueueFamilyProperties)              \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceMemoryProperties)                   \\\\\\r\\n    PFN_DEF(vkGetDeviceProcAddr)                                   \\\\\\r\\n    PFN_DEF(vkCreateDevice)                                        \\\\\\r\\n    PFN_DEF(vkDestroySurfaceKHR)                                   \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceSurfaceSupportKHR)                  \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceSurfaceCapabilitiesKHR)             \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceSurfaceFormatsKHR)                  \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceSurfacePresentModesKHR)             \\\\\\r\\n    PFN_DEF(vkCreateSwapchainKHR)                                  \\\\\\r\\n    PFN_DEF(vkDestroySwapchainKHR)                                 \\\\\\r\\n    PFN_DEF(vkGetSwapchainImagesKHR)                               \\\\\\r\\n    PFN_DEF(vkAcquireNextImageKHR)                                 \\\\\\r\\n    PFN_DEF(vkQueuePresentKHR)                                     \\\\\\r\\n    PFN_DEF(vkDestroyDevice)                                       \\\\\\r\\n    PFN_DEF(vkEnumerateDeviceExtensionProperties)                  \\\\\\r\\n    PFN_DEF(vkEnumerateDeviceLayerProperties)                      \\\\\\r\\n    PFN_DEF(vkGetDeviceQueue)                                      \\\\\\r\\n    PFN_DEF(vkQueueSubmit)                                         \\\\\\r\\n    PFN_DEF(vkQueueWaitIdle)                                       \\\\\\r\\n    PFN_DEF(vkDeviceWaitIdle)                                      \\\\\\r\\n    PFN_DEF(vkAllocateMemory)                                      \\\\\\r\\n    PFN_DEF(vkFreeMemory)                                          \\\\\\r\\n    PFN_DEF(vkMapMemory)                                           \\\\\\r\\n    PFN_DEF(vkUnmapMemory)                                         \\\\\\r\\n    PFN_DEF(vkFlushMappedMemoryRanges)                             \\\\\\r\\n    PFN_DEF(vkInvalidateMappedMemoryRanges)                        \\\\\\r\\n    PFN_DEF(vkGetDeviceMemoryCommitment)                           \\\\\\r\\n    PFN_DEF(vkBindBufferMemory)                                    \\\\\\r\\n    PFN_DEF(vkBindImageMemory)                                     \\\\\\r\\n    PFN_DEF(vkGetBufferMemoryRequirements)                         \\\\\\r\\n    PFN_DEF(vkGetImageMemoryRequirements)                          \\\\\\r\\n    PFN_DEF(vkGetImageSparseMemoryRequirements)                    \\\\\\r\\n    PFN_DEF(vkGetPhysicalDeviceSparseImageFormatProperties)        \\\\\\r\\n    PFN_DEF(vkQueueBindSparse)                                     \\\\\\r\\n    PFN_DEF(vkCreateFence)                                         \\\\\\r\\n    PFN_DEF(vkDestroyFence)                                        \\\\\\r\\n    PFN_DEF(vkResetFences)                                         \\\\\\r\\n    PFN_DEF(vkGetFenceStatus)                                      \\\\\\r\\n    PFN_DEF(vkWaitForFences)                                       \\\\\\r\\n    PFN_DEF(vkCreateSemaphore)                                     \\\\\\r\\n    PFN_DEF(vkDestroySemaphore)                                    \\\\\\r\\n    PFN_DEF(vkCreateEvent)                                         \\\\\\r\\n    PFN_DEF(vkDestroyEvent)                                        \\\\\\r\\n    PFN_DEF(vkGetEventStatus)                                      \\\\\\r\\n    PFN_DEF(vkSetEvent)                                            \\\\\\r\\n    PFN_DEF(vkResetEvent)                                          \\\\\\r\\n    PFN_DEF(vkCreateQueryPool)                                     \\\\\\r\\n    PFN_DEF(vkDestroyQueryPool)                                    \\\\\\r\\n    PFN_DEF(vkGetQueryPoolResults)                                 \\\\\\r\\n    PFN_DEF(vkCreateBuffer)                                        \\\\\\r\\n    PFN_DEF(vkDestroyBuffer)                                       \\\\\\r\\n    PFN_DEF(vkCreateBufferView)                                    \\\\\\r\\n    PFN_DEF(vkDestroyBufferView)                                   \\\\\\r\\n    PFN_DEF(vkCreateImage)                                         \\\\\\r\\n    PFN_DEF(vkDestroyImage)                                        \\\\\\r\\n    PFN_DEF(vkGetImageSubresourceLayout)                           \\\\\\r\\n    PFN_DEF(vkCreateImageView)                                     \\\\\\r\\n    PFN_DEF(vkDestroyImageView)                                    \\\\\\r\\n    PFN_DEF(vkCreateShaderModule)                                  \\\\\\r\\n    PFN_DEF(vkDestroyShaderModule)                                 \\\\\\r\\n    PFN_DEF(vkCreatePipelineCache)                                 \\\\\\r\\n    PFN_DEF(vkDestroyPipelineCache)                                \\\\\\r\\n    PFN_DEF(vkGetPipelineCacheData)                                \\\\\\r\\n    PFN_DEF(vkMergePipelineCaches)                                 \\\\\\r\\n    PFN_DEF(vkCreateGraphicsPipelines)                             \\\\\\r\\n    PFN_DEF(vkCreateComputePipelines)                              \\\\\\r\\n    PFN_DEF(vkDestroyPipeline)                                     \\\\\\r\\n    PFN_DEF(vkCreatePipelineLayout)                                \\\\\\r\\n    PFN_DEF(vkDestroyPipelineLayout)                               \\\\\\r\\n    PFN_DEF(vkCreateSampler)                                       \\\\\\r\\n    PFN_DEF(vkDestroySampler)                                      \\\\\\r\\n    PFN_DEF(vkCreateDescriptorSetLayout)                           \\\\\\r\\n    PFN_DEF(vkDestroyDescriptorSetLayout)                          \\\\\\r\\n    PFN_DEF(vkCreateDescriptorPool)                                \\\\\\r\\n    PFN_DEF(vkDestroyDescriptorPool)                               \\\\\\r\\n    PFN_DEF(vkResetDescriptorPool)                                 \\\\\\r\\n    PFN_DEF(vkAllocateDescriptorSets)                              \\\\\\r\\n    PFN_DEF(vkFreeDescriptorSets)                                  \\\\\\r\\n    PFN_DEF(vkUpdateDescriptorSets)                                \\\\\\r\\n    PFN_DEF(vkCreateFramebuffer)                                   \\\\\\r\\n    PFN_DEF(vkDestroyFramebuffer)                                  \\\\\\r\\n    PFN_DEF(vkCreateRenderPass)                                    \\\\\\r\\n    PFN_DEF(vkDestroyRenderPass)                                   \\\\\\r\\n    PFN_DEF(vkGetRenderAreaGranularity)                            \\\\\\r\\n    PFN_DEF(vkCreateCommandPool)                                   \\\\\\r\\n    PFN_DEF(vkDestroyCommandPool)                                  \\\\\\r\\n    PFN_DEF(vkResetCommandPool)                                    \\\\\\r\\n    PFN_DEF(vkAllocateCommandBuffers)                              \\\\\\r\\n    PFN_DEF(vkFreeCommandBuffers)                                  \\\\\\r\\n    PFN_DEF(vkBeginCommandBuffer)                                  \\\\\\r\\n    PFN_DEF(vkEndCommandBuffer)                                    \\\\\\r\\n    PFN_DEF(vkResetCommandBuffer)                                  \\\\\\r\\n    PFN_DEF(vkCmdBindPipeline)                                     \\\\\\r\\n    PFN_DEF(vkCmdSetViewport)                                      \\\\\\r\\n    PFN_DEF(vkCmdSetScissor)                                       \\\\\\r\\n    PFN_DEF(vkCmdSetLineWidth)                                     \\\\\\r\\n    PFN_DEF(vkCmdSetDepthBias)                                     \\\\\\r\\n    PFN_DEF(vkCmdSetBlendConstants)                                \\\\\\r\\n    PFN_DEF(vkCmdSetDepthBounds)                                   \\\\\\r\\n    PFN_DEF(vkCmdSetStencilCompareMask)                            \\\\\\r\\n    PFN_DEF(vkCmdSetStencilWriteMask)                              \\\\\\r\\n    PFN_DEF(vkCmdSetStencilReference)                              \\\\\\r\\n    PFN_DEF(vkCmdBindDescriptorSets)                               \\\\\\r\\n    PFN_DEF(vkCmdBindIndexBuffer)                                  \\\\\\r\\n    PFN_DEF(vkCmdBindVertexBuffers)                                \\\\\\r\\n    PFN_DEF(vkCmdDraw)                                             \\\\\\r\\n    PFN_DEF(vkCmdDrawIndexed)                                      \\\\\\r\\n    PFN_DEF(vkCmdDrawIndirect)                                     \\\\\\r\\n    PFN_DEF(vkCmdDrawIndexedIndirect)                              \\\\\\r\\n    PFN_DEF(vkCmdDispatch)                                         \\\\\\r\\n    PFN_DEF(vkCmdDispatchIndirect)                                 \\\\\\r\\n    PFN_DEF(vkCmdCopyBuffer)                                       \\\\\\r\\n    PFN_DEF(vkCmdCopyImage)                                        \\\\\\r\\n    PFN_DEF(vkCmdBlitImage)                                        \\\\\\r\\n    PFN_DEF(vkCmdCopyBufferToImage)                                \\\\\\r\\n    PFN_DEF(vkCmdCopyImageToBuffer)                                \\\\\\r\\n    PFN_DEF(vkCmdUpdateBuffer)                                     \\\\\\r\\n    PFN_DEF(vkCmdFillBuffer)                                       \\\\\\r\\n    PFN_DEF(vkCmdClearColorImage)                                  \\\\\\r\\n    PFN_DEF(vkCmdClearDepthStencilImage)                           \\\\\\r\\n    PFN_DEF(vkCmdClearAttachments)                                 \\\\\\r\\n    PFN_DEF(vkCmdResolveImage)                                     \\\\\\r\\n    PFN_DEF(vkCmdSetEvent)                                         \\\\\\r\\n    PFN_DEF(vkCmdResetEvent)                                       \\\\\\r\\n    PFN_DEF(vkCmdWaitEvents)                                       \\\\\\r\\n    PFN_DEF(vkCmdPipelineBarrier)                                  \\\\\\r\\n    PFN_DEF(vkCmdBeginQuery)                                       \\\\\\r\\n    PFN_DEF(vkCmdEndQuery)                                         \\\\\\r\\n    PFN_DEF(vkCmdResetQueryPool)                                   \\\\\\r\\n    PFN_DEF(vkCmdWriteTimestamp)                                   \\\\\\r\\n    PFN_DEF(vkCmdCopyQueryPoolResults)                             \\\\\\r\\n    PFN_DEF(vkCmdPushConstants)                                    \\\\\\r\\n    PFN_DEF(vkCmdBeginRenderPass)                                  \\\\\\r\\n    PFN_DEF(vkCmdNextSubpass)                                      \\\\\\r\\n    PFN_DEF(vkCmdEndRenderPass)                                    \\\\\\r\\n    PFN_DEF(vkCmdExecuteCommands)\\r\\n \\r\\n#define DEFINE_VK_FUNCTION_MACRO(function)                         \\\\\\r\\n    PFN_##function function;\\r\\n \\r\\n#define GET_VK_FUNCTION_PROCADDR(function)                         \\\\\\r\\n    function = reinterpret_cast<PFN_##function>(lib.get_function<PFN_##function>(#function));\\r\\n \\r\\nAPPLY_PFN_DEF_VK_FUNCTIONS(DEFINE_VK_FUNCTION_MACRO);\\r\\n \\r\\nvoid vk_loader_init()\\r\\n{\\r\\n    static dylib lib(VULKAN_LIB, false);\\r\\n    APPLY_PFN_DEF_VK_FUNCTIONS(GET_VK_FUNCTION_PROCADDR);\\r\\n}\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n## \u9879\u76ee\u5b9e\u6218\\r\\n\\r\\n\u8fd9\u662f\u6574\u4e2a\u6d4b\u8bd5demo\u7684\u9879\u76ee\u5730\u5740\uff1a\\r\\n\\r\\n[sumcai/MiniVulkanTriangle (gitee.com)](https://gitee.com/sumcai/MiniVulkanTriangle)"},{"id":"/09.Framebuffer\u7528\u6cd5","metadata":{"permalink":"/blog/09.Framebuffer\u7528\u6cd5","source":"@site/blog/09.Framebuffer\u7528\u6cd5.md","title":"Framebuffer\u7528\u6cd5","description":"opengl\u4e2dframebuffer\u79f0\u4e3a\u5e27\u7f13\u51b2\uff0c\u5b83\u662f\u4e00\u4e2a\u5185\u5b58\u7f13\u51b2\u533a\uff0c\u5982\u679c\u628a\u6e32\u67d3\u5230\u5c4f\u5e55\u7684\u989c\u8272\u7f13\u51b2\uff0c\u6df1\u5ea6\u7f13\u51b2\uff0c\u6a21\u677f\u7f13\u51b2\u90fd\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48\u5c31\u53eb\u5e27\u7f13\u51b2\u3002","date":"2021-12-26T20:14:37.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"},{"inline":true,"label":"framebuffe","permalink":"/blog/tags/framebuffe"}],"readingTime":4.545,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"Framebuffer\u7528\u6cd5","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840","framebuffe"],"permalink":"/opengl/framebuffer/","authors":"sumcai","date":"2021-12-26T20:14:37.000Z"},"unlisted":false,"prevItem":{"title":"\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5","permalink":"/blog/12.\u4e00\u79cd\u7b80\u5355\u52a0\u8f7dvulkan\u52a8\u6001\u5e93\u7684\u65b9\u6cd5"},"nextItem":{"title":"Blend\u7528\u6cd5","permalink":"/blog/08.Blend\u7528\u6cd5"}},"content":"opengl\u4e2dframebuffer\u79f0\u4e3a\u5e27\u7f13\u51b2\uff0c\u5b83\u662f\u4e00\u4e2a\u5185\u5b58\u7f13\u51b2\u533a\uff0c\u5982\u679c\u628a\u6e32\u67d3\u5230\u5c4f\u5e55\u7684\u989c\u8272\u7f13\u51b2\uff0c\u6df1\u5ea6\u7f13\u51b2\uff0c\u6a21\u677f\u7f13\u51b2\u90fd\u7f13\u5b58\u5230\u5185\u5b58\u4e2d\uff0c\u90a3\u4e48\u5c31\u53eb\u5e27\u7f13\u51b2\u3002\\r\\n\\r\\n## Framebuffer\u7528\u6cd5\\r\\n\\r\\nframebuffer\u901a\u5e38\u7528\u5728\u79bb\u5c4f\u6e32\u67d3\u6216\u8005\u540e\u5904\u7406\u4e0a\uff0c\u4e3b\u8981\u6d89\u53ca\u8fd9\u51e0\u4e2a\u51fd\u6570\uff1a\\r\\n\\r\\n-  `glGenFramebuffers` \uff1a\u521b\u5efaframebuffer\\r\\n-  `glBindFramebuffer` \uff1a\u7ed1\u5b9aframebuffer\\r\\n-  `glFramebufferTexture2D` \uff1a\u5c06\u7eb9\u7406\u9644\u52a0\u5230framebuffer\u5230\uff0c\u5b9e\u73b0\u7ed8\u5236\u5230\u7eb9\u7406\\r\\n\\r\\n\\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n\u6211\u4eec\u6a21\u62df\u4e00\u4e2a\u540e\u5904\u7406\u64cd\u4f5c\uff0c\u5c06[Blend\u7528\u6cd5](http://iogl.cn/opengl/blend/)\u4e2d\u7684\u7ed8\u5236\u7ed3\u679c\u753b\u5728\u5c4f\u5e55\u4e2d\u592e\uff0c\u5e76\u4e14\u5bf9\u7ed3\u679c\u7684\u989c\u8272\u53d6\u53cd\u5411\uff0c\u8ba9\u6211\u4eec\u770b\u770b\u5177\u4f53\u4ee3\u7801\uff1a\\r\\n\\r\\n`05.FBTexture.fs`\u5185\u5bb9\uff1a\\r\\n\\r\\n```glsl\\r\\n#version 330 core\\r\\nin vec2 TexCoord;\\r\\nuniform sampler2D tex1;\\r\\nout vec4 FragColor;\\r\\nvoid main()\\r\\n{\\r\\n    FragColor = vec4(vec3(1.0 - texture(tex1, TexCoord)), 1.0);\\r\\n}\\r\\n```\\r\\n\\r\\n\u5b9e\u73b0\u4ee3\u7801\uff1a\\r\\n\\r\\n```c++\\r\\nvoid display( GLFWwindow* window )\\r\\n{\\r\\n    // 1.\u7ed1\u5b9aframebuffer\uff0c\u8fd9\u6837\u53ef\u4ee5\u7ed8\u5236\u5230\u9644\u52a0\u7684\u7eb9\u7406fbTexture\u4e0a\\r\\n    glBindFramebuffer(GL_FRAMEBUFFER, framebuffer);\\r\\n    glEnable(GL_DEPTH_TEST);\\r\\n    glEnable(GL_BLEND);\\r\\n    glBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\\r\\n    glClearColor( 0, 0, 0.4, 0 );\\r\\n    glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\\r\\n\\r\\n    glUseProgram(boxProgramID);\\r\\n\\r\\n    glm::mat4 projection = glm::perspective(glm::radians(45.0f), (float) 5 / (float)5, 0.1f, 100.0f);\\r\\n    glm::mat4 view = glm::lookAt(glm::vec3(1,2,3), glm::vec3(0,0,0), glm::vec3(0,1,0));\\r\\n    glm::mat4 model = glm::mat4(1.0f);\\r\\n    glm::mat4 mvp = projection * view * model;\\r\\n\\r\\n    // 2.\u753b\u5730\u9762\\r\\n    GLuint mvpId = glGetUniformLocation(boxProgramID, \\"MVP\\");\\r\\n    glUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n    glBindVertexArray(FloorVAO);\\r\\n    glBindTexture(GL_TEXTURE_2D, floorTexture);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 6);\\r\\n\\r\\n    // 3.\u753b\u7acb\u65b9\u4f53\\r\\n    glBindVertexArray(VAO);\\r\\n    glBindTexture(GL_TEXTURE_2D, texture);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 36);\\r\\n\\r\\n    // 4.\u753bblend\u7269\u4f53\\r\\n    model = glm::mat4(1.0f);\\r\\n    model = glm::translate(model, glm::vec3(0, 0, 1.01f));\\r\\n    mvp = projection * view * model;\\r\\n    glUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n    glBindTexture(GL_TEXTURE_2D, blendTexture);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 6);\\r\\n    \\r\\n    // 5.\u5bf9fbTexture\u91c7\u6837\u540e\u5904\u7406\u5c06\u7ed8\u5236\u5230\u5c4f\u5e55\\r\\n    glDisable(GL_DEPTH_TEST);\\r\\n    glDisable(GL_BLEND);\\r\\n    glBindFramebuffer(GL_FRAMEBUFFER, 0);\\r\\n    glClearColor(0.3f, 0.3f, 0.3f, 1.0f);\\r\\n    glClear(GL_COLOR_BUFFER_BIT);\\r\\n    glUseProgram(screenProgramID);\\r\\n    glBindVertexArray(screenVAO);\\r\\n    glBindTexture(GL_TEXTURE_2D, fbTexture);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 6);\\r\\n}\\r\\n\\r\\nvoid prepare() {\\r\\n    boxProgramID = LoadShaders( \\"data/shader/03.MVP.vs\\", \\"data/shader/03.MVP.fs\\" );\\r\\n\\r\\n    const GLfloat g_vertex_buffer_data[] = {\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,\\r\\n            0.5f, -0.5f, -0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,\\r\\n\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 1.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n\\r\\n            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f\\r\\n    };\\r\\n\\r\\n    float fllor_vertex_buffer_data[] = {\\r\\n            5.0f, -0.5f,  5.0f,  1.0f, 0.0f,\\r\\n            -5.0f, -0.5f,  5.0f,  0.0f, 0.0f,\\r\\n            -5.0f, -0.5f, -5.0f,  0.0f, 1.0f,\\r\\n\\r\\n            5.0f, -0.5f,  5.0f,  1.0f, 0.0f,\\r\\n            -5.0f, -0.5f, -5.0f,  0.0f, 1.0f,\\r\\n            5.0f, -0.5f, -5.0f,  1.0f, 1.0f\\r\\n    };\\r\\n    float blend_vertex_buffer_data[] = {\\r\\n            0.0f,  0.5f,  0.0f,  0.0f,  0.0f,\\r\\n            0.0f, -0.5f,  0.0f,  0.0f,  1.0f,\\r\\n            1.0f, -0.5f,  0.0f,  1.0f,  1.0f,\\r\\n\\r\\n            0.0f,  0.5f,  0.0f,  0.0f,  0.0f,\\r\\n            1.0f, -0.5f,  0.0f,  1.0f,  1.0f,\\r\\n            1.0f,  0.5f,  0.0f,  1.0f,  0.0f\\r\\n    };\\r\\n\\r\\n    // 1.VAO\u3001VBO\u7684\u6570\u636e\\r\\n    glGenVertexArrays(1, &VAO);\\r\\n    glBindVertexArray(VAO);\\r\\n    GLuint VBO1;\\r\\n    glGenBuffers(1, &VBO1);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, VBO1);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n    // \u7eb9\u7406\u5750\u6807\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n\\r\\n    // 2.\u5730\u9762\u8d34\u56fe\\r\\n    glGenVertexArrays(1, &FloorVAO);\\r\\n    glBindVertexArray(FloorVAO);\\r\\n    GLuint VBO2;\\r\\n    glGenBuffers(1, &VBO2);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, VBO2);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(fllor_vertex_buffer_data), fllor_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n    // \u7eb9\u7406\u5750\u6807\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n\\r\\n    // 3.blend\u8d34\u56fe\\r\\n    glGenVertexArrays(1, &BlendVAO);\\r\\n    glBindVertexArray(BlendVAO);\\r\\n    GLuint VBO3;\\r\\n    glGenBuffers(1, &VBO3);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, VBO3);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(blend_vertex_buffer_data), blend_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n    // \u7eb9\u7406\u5750\u6807\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n\\r\\n    // \u7eb9\u7406\u6570\u636e\\r\\n    floorTexture = loadTexture(\\"data/img/33.png\\");\\r\\n    texture = loadTexture(\\"data/img/11.jpg\\");\\r\\n    blendTexture = loadTexture(\\"data/img/chick.png\\");\\r\\n\\r\\n\\r\\n    // 4.\u521b\u5efaframebuffer\u4ee5\u53ca\u9644\u52a0\u7684\u7eb9\u7406\\r\\n    glGenFramebuffers(1, &framebuffer);\\r\\n    glBindFramebuffer(GL_FRAMEBUFFER, framebuffer);\\r\\n    glGenTextures(1, &fbTexture);\\r\\n    glBindTexture(GL_TEXTURE_2D, fbTexture);\\r\\n    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, 512, 512, 0, GL_RGB, GL_UNSIGNED_BYTE, NULL);\\r\\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\\r\\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\\r\\n    glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, fbTexture, 0);\\r\\n\\r\\n    // 5.\u7ed8\u5236\u5230\u5c4f\u5e55\u7684shader\u548c\u9876\u70b9\u6570\u636e\\r\\n    screenProgramID = LoadShaders( \\"data/shader/02.Texture.vs\\", \\"data/shader/05.FBTexture.fs\\" );\\r\\n\\r\\n    const GLfloat g_screen_vertex_buffer_data[] = {\\r\\n            -0.5f,  0.5f,  0.0f,  0.0f,  1.0f,\\r\\n            -0.5f, -0.5f,  0.0f,  0.0f,  0.0f,\\r\\n            0.5f, -0.5f,  0.0f,   1.0f,  0.0f,\\r\\n\\r\\n            -0.5f,  0.5f,  0.0f,  0.0f,  1.0f,\\r\\n            0.5f, -0.5f,  0.0f,  1.0f,  0.0f,\\r\\n            0.5f,  0.5f,  0.0f,  1.0f,  1.0f\\r\\n    };\\r\\n\\r\\n    // VAO\u3001VBO\u7684\u6570\u636e\\r\\n    GLuint screenVBO;\\r\\n    glGenVertexArrays(1, &screenVAO);\\r\\n    glBindVertexArray(screenVAO);\\r\\n    glGenBuffers(1, &screenVBO);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, screenVBO);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(g_screen_vertex_buffer_data), g_screen_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n}\\r\\n```\\r\\n\\r\\n\u6700\u7ec8\u663e\u793a\u7ed3\u679c\uff1a\\r\\n\\r\\n![1640529248087](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/e2fabf1d21d3bcb698475c4adc3fd233.png)"},{"id":"/08.Blend\u7528\u6cd5","metadata":{"permalink":"/blog/08.Blend\u7528\u6cd5","source":"@site/blog/08.Blend\u7528\u6cd5.md","title":"Blend\u7528\u6cd5","description":"opengl\u7684blend\u7528\u4e8e\u989c\u8272\u6df7\u5408 \uff0c\u5982\u679c\u4e0d\u7528\u6df7\u5408\uff0c\u4e24\u5f20\u8d34\u56fe\u8d34\u5728\u4e00\u8d77\u65f6\uff0c\u524d\u9762\u7684\u8d34\u56fe\u4f1a\u8986\u76d6\u540e\u9762\u7684\u8d34\u56fe\uff0c\u52a0\u4e0a\u6df7\u5408\u529f\u80fd\uff0c\u4e24\u5f20\u8d34\u56fe\u53ef\u4ee5\u5f88\u597d\u7684\u8d34\u5408\u5728\u4e00\u8d77\u3002\u7528\u4ee3\u7801\u6f14\u793a\u4e00\u4e0b\u7528\u6cd5\u3002","date":"2021-12-16T22:29:30.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"},{"inline":true,"label":"blend","permalink":"/blog/tags/blend"}],"readingTime":3.55,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"Blend\u7528\u6cd5","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840","blend"],"date":"2021-12-16T22:29:30.000Z","authors":"sumcai","permalink":"/opengl/blend/"},"unlisted":false,"prevItem":{"title":"Framebuffer\u7528\u6cd5","permalink":"/blog/09.Framebuffer\u7528\u6cd5"},"nextItem":{"title":"Stencil\u7528\u6cd5","permalink":"/blog/07.Stencil\u7528\u6cd5"}},"content":"opengl\u7684blend\u7528\u4e8e\u989c\u8272\u6df7\u5408 \uff0c\u5982\u679c\u4e0d\u7528\u6df7\u5408\uff0c\u4e24\u5f20\u8d34\u56fe\u8d34\u5728\u4e00\u8d77\u65f6\uff0c\u524d\u9762\u7684\u8d34\u56fe\u4f1a\u8986\u76d6\u540e\u9762\u7684\u8d34\u56fe\uff0c\u52a0\u4e0a\u6df7\u5408\u529f\u80fd\uff0c\u4e24\u5f20\u8d34\u56fe\u53ef\u4ee5\u5f88\u597d\u7684\u8d34\u5408\u5728\u4e00\u8d77\u3002\u7528\u4ee3\u7801\u6f14\u793a\u4e00\u4e0b\u7528\u6cd5\u3002\\r\\n\\r\\n## blend\u5f00\u542f\u65b9\u6cd5\\r\\n\\r\\nblend\u4e3b\u8981\u4f7f\u7528\u4e0b\u9762\u51e0\u4e2a\u51fd\u6570\uff1a\\r\\n\\r\\n-  `glEnable(GL_BLEND)`: \u5f00\u542fblend\u529f\u80fd\\r\\n-  `glBlendFunc(GLenum sfactor, GLenum dfactor)`: sfactor\u6e90\u56e0\u5b50\uff0cdfactor\u76ee\u6807\u56e0\u5b50\\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n\u6211\u4eec\u5148\u753b\u4e00\u4e2a\u666e\u901a\u573a\u666f\\r\\n\\r\\n```c++\\r\\nvoid display( GLFWwindow* window )\\r\\n{\\r\\n    glClearColor( 0, 0, 0.4, 0 );\\r\\n    glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\\r\\n\\r\\n    glUseProgram(boxProgramID);\\r\\n\\r\\n\\r\\n    glm::mat4 projection = glm::perspective(glm::radians(45.0f), (float) 5 / (float)5, 0.1f, 100.0f);\\r\\n    glm::mat4 view = glm::lookAt(glm::vec3(1,2,3), glm::vec3(0,0,0), glm::vec3(0,1,0));\\r\\n    glm::mat4 model = glm::mat4(1.0f);\\r\\n    glm::mat4 mvp = projection * view * model;\\r\\n\\r\\n    // 1.\u753b\u5730\u9762\\r\\n    GLuint mvpId = glGetUniformLocation(boxProgramID, \\"MVP\\");\\r\\n    glUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n    glBindVertexArray(FloorVAO);\\r\\n    glBindTexture(GL_TEXTURE_2D, floorTexture);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 6);\\r\\n\\r\\n    // 2.\u753b\u7acb\u65b9\u4f53\\r\\n    glBindVertexArray(VAO);\\r\\n    glBindTexture(GL_TEXTURE_2D, texture);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 36);\\r\\n\\r\\n    // 3.\u753bblend\u7269\u4f53\\r\\n    model = glm::mat4(1.0f);\\r\\n    model = glm::translate(model, glm::vec3(0, 0, 1.01f));\\r\\n    mvp = projection * view * model;\\r\\n    glUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n    glBindTexture(GL_TEXTURE_2D, blendTexture);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 6);\\r\\n}\\r\\n\\r\\nvoid prepare() {\\r\\n    boxProgramID = LoadShaders( \\"data/shader/03.MVP.vs\\", \\"data/shader/03.MVP.fs\\" );\\r\\n\\r\\n    const GLfloat g_vertex_buffer_data[] = {\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,\\r\\n            0.5f, -0.5f, -0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,\\r\\n\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 1.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n\\r\\n            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f\\r\\n    };\\r\\n\\r\\n    float fllor_vertex_buffer_data[] = {\\r\\n            5.0f, -0.5f,  5.0f,  1.0f, 0.0f,\\r\\n            -5.0f, -0.5f,  5.0f,  0.0f, 0.0f,\\r\\n            -5.0f, -0.5f, -5.0f,  0.0f, 1.0f,\\r\\n\\r\\n            5.0f, -0.5f,  5.0f,  1.0f, 0.0f,\\r\\n            -5.0f, -0.5f, -5.0f,  0.0f, 1.0f,\\r\\n            5.0f, -0.5f, -5.0f,  1.0f, 1.0f\\r\\n    };\\r\\n    float blend_vertex_buffer_data[] = {\\r\\n            0.0f,  0.5f,  0.0f,  0.0f,  0.0f,\\r\\n            0.0f, -0.5f,  0.0f,  0.0f,  1.0f,\\r\\n            1.0f, -0.5f,  0.0f,  1.0f,  1.0f,\\r\\n\\r\\n            0.0f,  0.5f,  0.0f,  0.0f,  0.0f,\\r\\n            1.0f, -0.5f,  0.0f,  1.0f,  1.0f,\\r\\n            1.0f,  0.5f,  0.0f,  1.0f,  0.0f\\r\\n    };\\r\\n\\r\\n    // 1.VAO1\u3001VBO\u7684\u6570\u636e\\r\\n    glGenVertexArrays(1, &VAO);\\r\\n    glBindVertexArray(VAO);\\r\\n    GLuint VBO1;\\r\\n    glGenBuffers(1, &VBO1);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, VBO1);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n    // \u7eb9\u7406\u5750\u6807\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n\\r\\n    // 2.\u5730\u9762\u8d34\u56fe\\r\\n    glGenVertexArrays(1, &FloorVAO);\\r\\n    glBindVertexArray(FloorVAO);\\r\\n    GLuint VBO2;\\r\\n    glGenBuffers(1, &VBO2);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, VBO2);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(fllor_vertex_buffer_data), fllor_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n    // \u7eb9\u7406\u5750\u6807\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n\\r\\n    // 2.blend\u8d34\u56fe\\r\\n    glGenVertexArrays(1, &BlendVAO);\\r\\n    glBindVertexArray(BlendVAO);\\r\\n    GLuint VBO3;\\r\\n    glGenBuffers(1, &VBO3);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, VBO3);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(blend_vertex_buffer_data), blend_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n    // \u7eb9\u7406\u5750\u6807\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n\\r\\n    // \u7eb9\u7406\u6570\u636e\\r\\n    floorTexture = loadTexture(\\"data/img/33.png\\");\\r\\n    texture = loadTexture(\\"data/img/11.jpg\\");\\r\\n    blendTexture = loadTexture(\\"data/img/chick.png\\");\\r\\n\\r\\n    glEnable(GL_DEPTH_TEST);\\r\\n}\\r\\n```\\r\\n\\r\\n\u90fd\u662f\u666e\u901a\u8d34\u56fe\u64cd\u4f5c\uff0c\u663e\u793a\u6548\u679c\u5982\u4e0b\uff1a\\r\\n\\r\\n![1639699366516](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/8fdf692cbf38ffeae519a368949c634e.png)\\r\\n\\r\\n\\r\\n\\r\\n\u56e0\u4e3a\u662f\u76f4\u63a5\u8d34\u56fe\u8986\u76d6\u7684\uff0c\u6240\u4ee5\u5c0f\u9e21\u5468\u8fb9alpha\u4e3a0\u7684\u989c\u8272\u663e\u793a\u4e3a\u9ed1\u8272\uff0c\u5982\u679c\u52a0\u4e0ablend\u529f\u80fd\uff0c\u5219\u53ef\u4ee5\u770b\u5230\u540e\u9762\u56fe\u7247\u7684\u5185\u5bb9\u4e86\uff1a\\r\\n\\r\\n```c++\\r\\nglEnable(GL_BLEND);\\r\\nglBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);\\r\\n```\\r\\n\\r\\n\u6700\u7ec8\u663e\u793a\u6548\u679c\uff1a\\r\\n\\r\\n![1639699653817](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/3eddf9c37aea8e93be427111b162f78e.png)"},{"id":"/07.Stencil\u7528\u6cd5","metadata":{"permalink":"/blog/07.Stencil\u7528\u6cd5","source":"@site/blog/07.Stencil\u7528\u6cd5.md","title":"Stencil\u7528\u6cd5","description":"opengl\u7684stencil\u79f0\u4e3a\u6a21\u677f\u6d4b\u8bd5\uff0c\u548c\u6df1\u5ea6\u6d4b\u8bd5\u4e00\u6837\uff0c\u662fOpengl\u4e2d\u5e38\u7528\u7684\u6280\u672f\u3002\u6982\u5ff5\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u76f4\u63a5\u6f14\u793a\u7528\u6cd5\u3002\u6211\u4eec\u5b9e\u73b0\u5bf9\u4e00\u4e2a\u7acb\u65b9\u4f53\u76d2\u5b50\u8fdb\u884c\u9ad8\u4eae\u63cf\u8fb9\u3002","date":"2021-12-15T22:13:01.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"},{"inline":true,"label":"stencil","permalink":"/blog/tags/stencil"}],"readingTime":5.185,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"Stencil\u7528\u6cd5","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840","stencil"],"date":"2021-12-15T22:13:01.000Z","authors":"sumcai","permalink":"/opengl/stencil/"},"unlisted":false,"prevItem":{"title":"Blend\u7528\u6cd5","permalink":"/blog/08.Blend\u7528\u6cd5"},"nextItem":{"title":"MVP\u53d8\u6362\u5750\u6807","permalink":"/blog/06.MVP\u53d8\u6362\u5750\u6807"}},"content":"opengl\u7684stencil\u79f0\u4e3a\u6a21\u677f\u6d4b\u8bd5\uff0c\u548c\u6df1\u5ea6\u6d4b\u8bd5\u4e00\u6837\uff0c\u662fOpengl\u4e2d\u5e38\u7528\u7684\u6280\u672f\u3002\u6982\u5ff5\u5c31\u4e0d\u89e3\u91ca\u4e86\uff0c\u76f4\u63a5\u6f14\u793a\u7528\u6cd5\u3002\u6211\u4eec\u5b9e\u73b0\u5bf9\u4e00\u4e2a\u7acb\u65b9\u4f53\u76d2\u5b50\u8fdb\u884c\u9ad8\u4eae\u63cf\u8fb9\u3002\\r\\n\\r\\n## stencil\u7528\u6cd5\\r\\n\\r\\nstencil\u6700\u7b80\u5355\u7684\u7528\u6cd5\u662f\u4f7f\u7528\u4e0b\u9762\u4e09\u4e2a\u51fd\u6570\uff1a\\r\\n\\r\\n- `glStencilMask(GLuint value)`: \u4f4d\u906e\u7f69\uff0c 0x00\u8bbe\u7f6e\u6a21\u677f\u7f13\u51b2\u4e0d\u53ef\u5199\u5165\uff1bvalue=0xFF\u8bbe\u7f6e\u53ef\u4ee5\u5199\u5165\u3002\\r\\n- `glStencilFunc(GLenum func, GLint ref, GLuint mask)`: \u7528ref\u503c\u4e0e\u5b58\u50a8\u7684\u6a21\u677f\u503c\u6bd4\u8f83\uff0cfunc\u4e3a\u6bd4\u8f83\u65b9\u6cd5\u3002\\r\\n- `glStencilOp(GLenum sfail, GLenum dpfail, GLenum dppass)`: \u6a21\u677f\u503c\u7684\u5199\u5165\u7b56\u7565\\r\\n\\r\\n\u7b80\u5355\u6765\u8bf4\uff0c`glStencilMask`\u662f\u5f00\u5173\uff0c\u5f00\u4e86\u624d\u53ef\u4ee5\u5199\u5165\u6a21\u677f\u503c\uff1b`glStencilFunc`\u662f\u5199\u5165\u6a21\u677f\u503c\u7684\u524d\u63d0\u6761\u4ef6\uff1b`glStencilOp`\u662f\u6a21\u677f\u503c\u7684\u5177\u4f53\u5199\u5165\u65b9\u6cd5\u3002\\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n### \u666e\u901a\u6d41\u7a0b\\r\\n\\r\\n\u6211\u4eec\u5148\u51c6\u5907\u597d\u4e86\u753b\u4e00\u4e2a\u7acb\u65b9\u4f53\u76d2\u5b50\u7684\u4ee3\u7801\uff1a\\r\\n\\r\\n```cpp\\r\\nGLuint boxProgramID;\\r\\n\\r\\nvoid display( GLFWwindow* window )\\r\\n{\\r\\n    glClearColor( 0, 0, 0.4, 0 );\\r\\n    glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);\\r\\n\\r\\n    // \u8bbe\u7f6e\u597d\u5750\u6807\u53d8\u5316\u7684mvp\\r\\n    glm::mat4 projection = glm::perspective(glm::radians(45.0f), (float) 5 / (float)5, 0.1f, 100.0f);\\r\\n    glm::mat4 view = glm::lookAt(glm::vec3(1,2,3), glm::vec3(0,0,0), glm::vec3(0,1,0));\\r\\n    glm::mat4 model = glm::mat4(1.0f);\\r\\n    glm::mat4 mvp = projection * view * model;\\r\\n\\r\\n    // \u753b\u7acb\u65b9\u4f53\\r\\n    glUseProgram(boxProgramID);\\r\\n    GLuint mvpId = glGetUniformLocation(boxProgramID, \\"MVP\\");\\r\\n    glUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 36);\\r\\n}\\r\\n\\r\\nvoid prepare() {\\r\\n    boxProgramID = LoadShaders( \\"data/shader/03.MVP.vs\\", \\"data/shader/03.MVP.fs\\" );\\r\\n\\r\\n    // \u7acb\u65b9\u4f53\u7684\u9876\u70b9\u5750\u6807\uff0c\u7eb9\u7406\u5750\u6807\\r\\n    const GLfloat g_vertex_buffer_data[] = {\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,\\r\\n            0.5f, -0.5f, -0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 0.0f,\\r\\n\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 1.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n\\r\\n            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f, -0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f, -0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f, -0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f, -0.5f, -0.5f,  0.0f, 1.0f,\\r\\n\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f,\\r\\n            0.5f,  0.5f, -0.5f,  1.0f, 1.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            0.5f,  0.5f,  0.5f,  1.0f, 0.0f,\\r\\n            -0.5f,  0.5f,  0.5f,  0.0f, 0.0f,\\r\\n            -0.5f,  0.5f, -0.5f,  0.0f, 1.0f\\r\\n    };\\r\\n\\r\\n    // VAO\u3001VBO\u7684\u6570\u636e\\r\\n    GLuint VAO1;\\r\\n    GLuint VBO1;\\r\\n    glGenVertexArrays(1, &VAO1);\\r\\n    glBindVertexArray(VAO1);\\r\\n    glGenBuffers(1, &VBO1);\\r\\n    glBindBuffer(GL_ARRAY_BUFFER, VBO1);\\r\\n    glBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n    glEnableVertexAttribArray(0);\\r\\n    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n\\r\\n    // \u7eb9\u7406\u6570\u636e\\r\\n    GLuint texture;\\r\\n    glGenTextures(1, &texture);\\r\\n    glActiveTexture(GL_TEXTURE0);\\r\\n    glBindTexture(GL_TEXTURE_2D, texture);\\r\\n\\r\\n    // \u73af\u7ed5\u65b9\u5f0f\\r\\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);\\r\\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\\r\\n    // \u8fc7\u6ee4\u65b9\u5f0f\\r\\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\\r\\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\\r\\n    // \u52a0\u8f7d\u56fe\u7247\u6570\u636e\\r\\n    int width, height, channels;\\r\\n    stbi_set_flip_vertically_on_load(true);\\r\\n    unsigned char* data = stbi_load(\\"data/img/test.jpg\\", &width, &height, &channels, 0);\\r\\n    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data);\\r\\n    stbi_image_free(data);\\r\\n    // \u7eb9\u7406\u5750\u6807\\r\\n    glEnableVertexAttribArray(1);\\r\\n    glVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n\\r\\n    glEnable(GL_DEPTH_TEST);\\r\\n}\\r\\n\\r\\nint main( int argc, char** argv )\\r\\n{\\r\\n    glfwInit();\\r\\n    GLFWwindow* window = glfwCreateWindow( 512, 512, \\"OpenGL_Tutorial\\", NULL, NULL );\\r\\n    glfwMakeContextCurrent( window );\\r\\n    gladLoadGLLoader( (GLADloadproc)glfwGetProcAddress );\\r\\n    glfwSwapInterval( 1 );\\r\\n\\r\\n    glfwSetKeyCallback( window, keyboard );\\r\\n    glfwSetCursorPosCallback( window, motion );\\r\\n    glfwSetMouseButtonCallback( window, mouse );\\r\\n\\r\\n    prepare();\\r\\n\\r\\n    while (!glfwWindowShouldClose(window)) {\\r\\n        display(window);\\r\\n        glfwPollEvents();\\r\\n        glfwSwapBuffers(window);\\r\\n    }\\r\\n\\r\\n    glfwTerminate();\\r\\n    return 0;\\r\\n}\\r\\n```\\r\\n\\r\\n\u663e\u793a\u6548\u679c\u5982\u56fe\uff1a\\r\\n\\r\\n![1639578757898](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/f9fd38ae6d0d360aa8b7cb6c3bfe0f0e.png)\\r\\n\\r\\n### \u4f7f\u7528\u6a21\u677f\u6d4b\u8bd5\u529f\u80fd\\r\\n\\r\\n\u52a0\u5165\u6a21\u677f\u6d4b\u8bd5\u529f\u80fd\uff0c\u6d41\u7a0b\u63cf\u8ff0\uff1a\\r\\n\\r\\n1. \u5f00\u542f\u6a21\u677f\u6d4b\u8bd5\\r\\n2. \u6e05\u9664\u6240\u6709\u6a21\u677f\u503c\\r\\n3. \u753b\u4e00\u4e2a\u7acb\u65b9\u4f53\u76d2\u5b50\uff0c\u5c06\u76d2\u5b50\u533a\u57df\u7684\u6a21\u677f\u503c\u8bbe\u7f6e\u53ef\u5199\uff0c\u503c\u4e3a1\\r\\n4. \u753b\u4e00\u4e2a\u7a0d\u5927\u70b9\u7684\u76d2\u5b50(\u76d2\u5b50\u653e\u59271.05\u500d)\uff0c\u4e0d\u8d34\u56fe\uff0cfs\u91cc\u76f4\u63a5\u8bbe\u7f6e\u989c\u8272\u56fa\u5b9a\u503c\uff0c\u8fdb\u884c\u6a21\u677f\u6d4b\u8bd5\uff0c\u6a21\u677f\u6d4b\u8bd5\u6761\u4ef6\u4e3a\u6a21\u677f\u503c != 1\uff0c\u8bbe\u7f6e\u6a21\u677f\u503c\u4e0d\u53ef\u5199\u3002\\r\\n\\r\\n\\r\\n\\r\\n\u5177\u4f53\u4ee3\u7801\uff1a\\r\\n\\r\\n```cpp\\r\\nvoid display( GLFWwindow* window )\\r\\n{\\r\\n    // 1.\u5f00\u542fstencil\u529f\u80fd\\r\\n    glEnable(GL_STENCIL_TEST);\\r\\n    // \u8bbe\u7f6e\u6a21\u677f\u503c\u53ef\u5199\uff0c\u4e0b\u9762\u7684clear GL_STENCIL_BUFFER_BIT\u64cd\u4f5c\u624d\u80fd\u6267\u884c\\r\\n    glStencilMask(0xFF);\\r\\n    // \u8bbe\u7f6e\u6a21\u677f\u6d4b\u8bd5\u6210\u529f\u7684\u5199\u5165\u65b9\u5f0f\u4e3a\u66ff\u6362\uff0c\u5373\u6d4b\u8bd5\u6210\u529f\uff0c\u4f7f\u7528glStencilFunc\u4e2d\u7684ref\u503c\u5199\u5165\u6a21\u677f\u503c\\r\\n    glStencilOp(GL_KEEP, GL_KEEP, GL_REPLACE);\\r\\n    glClearColor( 0, 0, 0.4, 0 );\\r\\n    // 2.\u6e05\u9664\u6df1\u5ea6\u3001\u6a21\u677f\u503c\\r\\n    glClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT | GL_STENCIL_BUFFER_BIT);\\r\\n\\r\\n    // 3.\u753b\u7acb\u65b9\u4f53\\r\\n    glm::mat4 projection = glm::perspective(glm::radians(45.0f), (float) 5 / (float)5, 0.1f, 100.0f);\\r\\n    glm::mat4 view = glm::lookAt(glm::vec3(1,2,3), glm::vec3(0,0,0), glm::vec3(0,1,0));\\r\\n    glm::mat4 model = glm::mat4(1.0f);\\r\\n    glm::mat4 mvp = projection * view * model;\\r\\n\\r\\n    // \u8bbe\u7f6e\u6a21\u677f\u503c\u7684\u5199\u5165\u7b56\u7565\uff0cGL_ALWAYS\u8868\u793a\u65e0\u6761\u4ef6\u5199\u5165\\r\\n    glStencilFunc(GL_ALWAYS, 1, 0xFF);\\r\\n    glUseProgram(boxProgramID);\\r\\n    GLuint mvpId = glGetUniformLocation(boxProgramID, \\"MVP\\");\\r\\n    glUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 36);\\r\\n\\r\\n    // 4.\u753b\u63cf\u8fb9\\r\\n    model = glm::mat4(1.0f);\\r\\n    // \u653e\u5927\u76d2\u5b50\u4e3a\u539f\u6765\u76841.05\u500d\\r\\n    model = glm::scale(model, glm::vec3(1.05, 1.05, 1.05));\\r\\n    mvp = projection * view * model;\\r\\n\\r\\n    // \u8fdb\u884c\u6a21\u677f\u6d4b\u8bd5\uff0c\u53ea\u6709\u4e0d\u7b49\u4e8e1\u7684\u6a21\u677f\u503c\u624d\u6d4b\u8bd5\u6210\u529f\\r\\n    glStencilFunc(GL_NOTEQUAL, 1, 0xFF);\\r\\n    // \u8bbe\u7f6e\u6a21\u677f\u503c\u4e0d\u53ef\u5199\uff0c\u6b64\u5904\u65e0\u9700\u66f4\u65b0\u6a21\u677f\u503c\\r\\n    glStencilMask(0x00);\\r\\n    glUseProgram(stencilProgramID);\\r\\n    mvpId = glGetUniformLocation(stencilProgramID, \\"MVP\\");\\r\\n    glUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n    glDrawArrays(GL_TRIANGLES, 0, 36);\\r\\n\\r\\n}\\r\\n```\\r\\n\\r\\n\\r\\n\\r\\n\u73b0\u5728\u7684\u6548\u679c\uff1a\\r\\n\\r\\n![1639579682967](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/88e03e838ed2941bffb00b84a0d956da.png)"},{"id":"/06.MVP\u53d8\u6362\u5750\u6807","metadata":{"permalink":"/blog/06.MVP\u53d8\u6362\u5750\u6807","source":"@site/blog/06.MVP\u53d8\u6362\u5750\u6807.md","title":"MVP\u53d8\u6362\u5750\u6807","description":"MVP\u6982\u5ff5","date":"2021-12-12T17:10:05.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"},{"inline":true,"label":"\u5750\u6807\u7cfb","permalink":"/blog/tags/\u5750\u6807\u7cfb"}],"readingTime":1.27,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"MVP\u53d8\u6362\u5750\u6807","date":"2021-12-12T17:10:05.000Z","authors":"sumcai","permalink":"/opengl/mvp/","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840","\u5750\u6807\u7cfb"]},"unlisted":false,"prevItem":{"title":"Stencil\u7528\u6cd5","permalink":"/blog/07.Stencil\u7528\u6cd5"},"nextItem":{"title":"computer shader\u8be6\u89e3","permalink":"/blog/10.computer shader\u8be6\u89e3"}},"content":"## MVP\u6982\u5ff5\\r\\n\\r\\n\u5728opengl\u4e2d\uff0c`MVP`\u79f0\u4e3a\u6a21\u578b\u89c2\u5bdf\u6295\u5f71\u77e9\u9635\uff0c\u5b83\u662f\u6a21\u578b\uff08Model\uff09\u3001\u89c2\u5bdf\uff08View\uff09\u548c\u6295\u5f71\uff08Projection\uff09\u77e9\u9635\u4f5c\u7528\u5728\u7269\u4f53\u4e0a\u7ec4\u5408\u4f5c\u7528\uff0c\u7528\u4e8e\u5bf9\u7269\u4f53\u7684\u5750\u6807\u7cfb\u8fdb\u884c\u53d8\u6362\u3002\\r\\n\\r\\n![1639300692250](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/a97b8a1c101a53d8bfb26020cc22de2d.png)\\r\\n\\r\\n\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u7269\u4f53\u7684\u5750\u6807\u7cfb\u53d8\u5316\u8fc7\u7a0b\u4e3a\uff1a\\r\\n\\r\\n1. \u5c40\u90e8\u5750\u6807\u7cfb\\r\\n2. \u4e16\u754c\u5750\u6807\u7cfb\\r\\n3. \u89c2\u5bdf\u5750\u6807\u7cfb\\r\\n4. \u88c1\u526a\u5750\u6807\u7cfb\\r\\n\\r\\n\\r\\n\\r\\n## MVP\u516c\u5f0f\\r\\n\\r\\n$$ MVP=Mprojection\u22c5Mview\u22c5Mmodel$$\\r\\n\\r\\n\u5728shader\u4e2d\u7528MVP * gl_Position \u5f97\u5230\u8f6c\u6362\u540e\u7684\u5750\u6807\u3002\\r\\n\\r\\n\\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n\u5728[OpenGL\u7eb9\u7406](http://iogl.cn/pages/ogltexture/)\u4e2d\uff0c\u4ecb\u7ecd\u4e86\u7eb9\u7406\u7684\u4f7f\u7528\u65b9\u6cd5\uff0c\u6700\u7ec8\u7684\u8fd0\u884c\u6548\u679c\u4e3a\uff1a\\r\\n\\r\\n![1637478946876](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/8b0c927d8f7dde56c3955c47c152fc98.png)\\r\\n\\r\\n\u4fee\u6539vertext shader\uff0c\u6dfb\u52a0MVP\u53d8\u91cf\\r\\n\\r\\n```glsl\\r\\n#version 330 core\\r\\nlayout (location = 0) in vec3 aPos;\\r\\nlayout (location = 1) in vec2 aTexCoord;\\r\\nuniform mat4 MVP;\\r\\n\\r\\nout vec2 TexCoord;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    gl_Position = MVP * vec4(aPos, 1.0);\\r\\n    TexCoord = aTexCoord;\\r\\n}\\r\\n```\\r\\n\\r\\n\u5728\u7ed8\u5236\u4e4b\u524d\u5c06MVP\u77e9\u9635\u4f20\u5165\u7740\u8272\u5668\uff1a\\r\\n\\r\\n```c++\\r\\nglm::mat4 projection = glm::perspective(glm::radians(45.0f), (float) width / (float)height, 0.1f, 100.0f);\\r\\nglm::mat4 view = glm::lookAt(glm::vec3(1,2,3), glm::vec3(0,0,0), glm::vec3(0,1,0));\\r\\nglm::mat4 model = glm::mat4(1.0f);\\r\\nglm::mat4 mvp = projection * view * model;\\r\\n\\r\\nGLuint mvpId = glGetUniformLocation(programID, \\"MVP\\");\\r\\nglUniformMatrix4fv(mvpId, 1, GL_FALSE, &mvp[0][0]);\\r\\n```\\r\\n\\r\\n\u73b0\u5728\u7684\u8fd0\u884c\u6548\u679c\u5982\u4e0b\uff1a\\r\\n\\r\\n![1639310527486](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/1beb112d4b8acb155e117a0ba0f25ad2.png)"},{"id":"/10.computer shader\u8be6\u89e3","metadata":{"permalink":"/blog/10.computer shader\u8be6\u89e3","source":"@site/blog/10.computer shader\u8be6\u89e3.md","title":"computer shader\u8be6\u89e3","description":"\u4f7f\u7528\u65b9\u5f0f","date":"2021-12-08T07:39:25.000Z","tags":[{"inline":true,"label":"computer shader","permalink":"/blog/tags/computer-shader"}],"readingTime":1.31,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"computer shader\u8be6\u89e3","categories":["Vulkan\u6280\u672f"],"tags":["computer shader"],"date":"2021-12-08T07:39:25.000Z","authors":"sumcai","permalink":"/vulkan/compshader/"},"unlisted":false,"prevItem":{"title":"MVP\u53d8\u6362\u5750\u6807","permalink":"/blog/06.MVP\u53d8\u6362\u5750\u6807"},"nextItem":{"title":"OpenGL\u7eb9\u7406","permalink":"/blog/05.OpenGL\u7eb9\u7406"}},"content":"## \u4f7f\u7528\u65b9\u5f0f\\r\\n\\r\\n- \u4ee3\u7801\u4fa7\u8c03\u5ea6\u8ba1\u7b97\u7ba1\u7ebf\u4efb\u52a1\\r\\n\\r\\n  `vkCmdDIspatch(commandBuffer, groupSize.x, groupSize.y, groupSize.z)`\\r\\n\\r\\n  `groupSize`\u4ee3\u8868\u5de5\u4f5c\u7ec4\u6570\u91cf(xyz\u4e09\u4e2a\u65b9\u5411\u4e0a)\\r\\n\\r\\n- shader\u4fa7\u914d\u7f6e\u8bbe\u7f6e\\r\\n\\r\\n  `layout(local_size_x=6, local_size_y=4) in;`\\r\\n\\r\\n  \u8bbe\u7f6e\u672c\u5730\u5de5\u4f5c\u7ec4\u5927\u5c0f\uff0c`local_size_z`\u672a\u8bbe\u7f6e\u53d6\u9ed8\u8ba4\u503c1\\r\\n\\r\\n\\r\\n\\r\\n## WorkGroup\u53c2\u6570\u8bf4\u660e\\r\\n\\r\\n![1638971538231](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/863e1f0932c954536068441fbcf0534f.png)\\r\\n\\r\\n\u4ee5\u4e0a\u56fe\u4e3a\u4f8b\\r\\n\\r\\n- \u5168\u5c40\u5de5\u4f5c\u7ec4\uff0c groupSize.x =3 , groupSize.y=4, groupSize.z=8\\r\\n\\r\\n- `gl_NumWorkGroups` \uff1a(3\uff0c4\uff0c8)\uff0c\u5168\u5c40\u5de5\u4f5c\u7ec4\u5927\u5c0f\u3002\\r\\n\\r\\n- `gl_WorkGroupSize` \uff1a(6\uff0c4\uff0c1)\uff0c\u672c\u5730\u5de5\u4f5c\u7ec4\u5927\u5c0f\u3002\\r\\n\\r\\n- `gl_WorkGroupID` \uff1a\uff082\uff0c2\uff0c4\uff09\uff0c\u672c\u5730\u5de5\u4f5c\u7ec4\u5728\u5168\u5c40\u5de5\u4f5c\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\\r\\n\\r\\n- `gl_LocalInvocationID` \uff1a\uff085\uff0c3\uff0c0\uff09\uff0c\u8ba1\u7b97\u5355\u5143\u5728\u672c\u5730\u5de5\u4f5c\u7ec4\u7684\u4f4d\u7f6e\u3002\\r\\n\\r\\n- `gl_GlobalInvocationID` \uff1a\uff0817\uff0c11\uff0c4\uff09\uff0c\u8ba1\u7b97\u5355\u5143\u5728\u5168\u5c40\u5de5\u4f5c\u81ea\u7684\u4f4d\u7f6e\uff0cgl_WorkGroupID * gl_WorkGroupSize + gl_LocalInvocationID\\r\\n\\r\\n- `gl_LocalInvocationIndex` \uff1a23\uff0c\u8ba1\u7b97\u5355\u5143\u5728\u672c\u5730\u5de5\u4f5c\u7ec4\u7684\u7d22\u5f15\uff0cgl_LocalInvocationID.z * gl_WorkGroupSize.x * gl_WorkGroupSize.y + gl_LocalInvocationID.y * gl_WorkGroupSize.x +gl_LocalInvocationID.x;\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n## Subgroup\u53c2\u6570\u8bf4\u660e\\r\\n\\r\\n![1638972921886](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/c349681166b76d3a822788989b02ac22.png)\\r\\n\\r\\n\u5982\u679c\u4e00\u4e2a\u672c\u5730\u5de5\u4f5c\u7ec4\u5206\u6210\u5982\u4e0a\u56fe\u6240\u793a\u7684subgroup\uff0c\u5219\u6709\u5982\u4e0b\u53c2\u6570\\r\\n\\r\\n-  `gl_NumSubgroups`  \uff1a8\uff0c\u672c\u5730\u5de5\u4f5c\u7ec4\u5185\u7684\u5b50\u7ec4\u6570\\r\\n-  `gl_SubgroupID`  \uff1a[0\uff0c7]\uff0c\u672c\u5730\u5de5\u4f5c\u7ec4\u5185\u5b50\u7ec4\u7684ID\uff0c\u8303\u56f4[0\uff0cgl_NumSubgroups)\\r\\n-  `gl_SubgroupSize`  \uff1a32\uff0c\u5b50\u7ec4\u7684\u5bb9\u91cf\u5927\u5c0f\\r\\n-  `gl_SubgroupInvocationID`  \uff1a[0\uff0c31]\uff0c\u5b50\u7ec4\u5185\u8ba1\u7b97\u5355\u5143\u7684ID\uff0c\u8303\u56f4[0\uff0cgl_SubgroupSize)"},{"id":"/05.OpenGL\u7eb9\u7406","metadata":{"permalink":"/blog/05.OpenGL\u7eb9\u7406","source":"@site/blog/05.OpenGL\u7eb9\u7406.md","title":"OpenGL\u7eb9\u7406","description":"\u7b80\u4ecb","date":"2021-11-21T13:57:08.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"},{"inline":true,"label":"\u7eb9\u7406","permalink":"/blog/tags/\u7eb9\u7406"}],"readingTime":3.05,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"OpenGL\u7eb9\u7406","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840","\u7eb9\u7406"],"date":"2021-11-21T13:57:08.000Z","authors":"sumcai","permalink":"/opengl/texture/"},"unlisted":false,"prevItem":{"title":"computer shader\u8be6\u89e3","permalink":"/blog/10.computer shader\u8be6\u89e3"},"nextItem":{"title":"OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf","permalink":"/blog/04.OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf"}},"content":"## \u7b80\u4ecb\\r\\n\\r\\nopengl\u7eb9\u7406\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u8d34\u56fe\uff0c\u50cf2D\u6e38\u620f\uff0c\u5c31\u662f\u7528\u5927\u91cf\u7684\u8d34\u56fe\u62fc\u8d77\u6765\u7ec4\u6210\u4e30\u5bcc\u591a\u5f69\u7684\u753b\u9762\u3002\u4e0b\u9762\u6211\u4eec\u8be6\u7ec6\u5730\u63cf\u8ff0\u4e00\u4e0b\u4f7f\u7528\u7eb9\u7406\u7684\u4ee3\u7801\u65b9\u5f0f\u3002\\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n\u9876\u70b9\u7740\u8272\u5668\u8f93\u5165\u4e24\u7ec4\u5750\u6807\uff0c\u9876\u70b9\u5750\u6807\u548c\u7eb9\u7406\u5750\u6807\uff0c\u7eb9\u7406\u5750\u6807\u76f4\u63a5\u4f20\u9012\u7ed9\u7247\u6bb5\u7740\u8272\u5668\\r\\n\\r\\n```c++\\r\\n//02.Texture.vs\\r\\n\\r\\n#version 330 core\\r\\nlayout (location = 0) in vec3 aPos;\\r\\nlayout (location = 1) in vec2 aTexCoord;\\r\\n\\r\\nout vec2 TexCoord;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    gl_Position = vec4(aPos, 1.0);\\r\\n    TexCoord = aTexCoord;\\r\\n}\\r\\n```\\r\\n\\r\\n\u7247\u6bb5\u7740\u8272\u5668\u5b9a\u4e49\u4e00\u4e2a\u7eb9\u7406\u91c7\u6837\u5668text1\uff0c\u5b83\u4e0e\u4ee3\u7801\u4e2d\u7ed1\u5b9a\u7684TEXTURE0\u5173\u8054\uff0c\u4f7f\u7528\u4f20\u5165\u7684\u7eb9\u7406\u5750\u6807\u91c7\u6837\\r\\n\\r\\n```c++\\r\\n//02.Texture.fs\\r\\n\\r\\n#version 330 core\\r\\nin vec2 TexCoord;\\r\\nuniform sampler2D tex1;\\r\\nout vec4 FragColor;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    FragColor = texture(tex1, TexCoord);\\r\\n}\\r\\n```\\r\\n\\r\\n\u5b9e\u73b0\u4ee3\u7801\u903b\u8f91\\r\\n\\r\\n```c++\\r\\nGLuint programID = LoadShaders( \\"data/shader/02.Texture.vs\\", \\"data/shader/02.Texture.fs\\" );\\r\\nglUseProgram(programID);\\r\\n\\r\\n// \u9876\u70b9\u3001\u7eb9\u7406\u5750\u6807\\r\\nconst GLfloat g_vertex_buffer_data[] = {\\r\\n    -0.5f, -0.5f, 0.0f, 0.0f, 0.0f,    // \u5de6\u4e0b\u89d2\\r\\n    0.5f, -0.5f, 0.0f,  1.0f, 0.0f,    // \u53f3\u4e0b\u89d2\\r\\n    -0.5f, 0.5f, 0.0f,  0.0f, 1.0f,    // \u5de6\u4e0a\u89d2\\r\\n    0.5f, 0.5f, 0.0f,   1.0f, 1.0f     // \u53f3\u4e0a\u89d2\\r\\n};\\r\\n// \u9876\u70b9\u7d22\u5f15\\r\\nunsigned int indices[] = {0, 1, 2,\\r\\n                          1, 2, 3};\\r\\n\\r\\n// VAO1\u3001VBO1\u3001EBO1\u7684\u6570\u636e\\r\\nGLuint VAO1;\\r\\nGLuint VBO1;\\r\\nGLuint EBO1;\\r\\nglGenVertexArrays(1, &VAO1);\\r\\nglBindVertexArray(VAO1);\\r\\n\\r\\nglGenBuffers(1, &VBO1);\\r\\nglBindBuffer(GL_ARRAY_BUFFER, VBO1);\\r\\nglBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n\\r\\nglGenBuffers(1, &EBO1);\\r\\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO1);\\r\\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW);\\r\\n\\r\\nglEnableVertexAttribArray(0);\\r\\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)0);\\r\\n\\r\\n// \u7eb9\u7406\u6570\u636e\\r\\nGLuint texture;\\r\\nglGenTextures(1, &texture);\\r\\nglActiveTexture(GL_TEXTURE0);\\r\\nglBindTexture(GL_TEXTURE_2D, texture);\\r\\n\\r\\n// \u73af\u7ed5\u65b9\u5f0f\\r\\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_REPEAT);\\r\\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_REPEAT);\\r\\n// \u8fc7\u6ee4\u65b9\u5f0f\\r\\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\\r\\nglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\\r\\n// \u52a0\u8f7d\u56fe\u7247\u6570\u636e\\r\\nint width, height, channels;\\r\\n// \u56fe\u50cf\u5750\u6807\u7cfb\u4e0e\u7eb9\u7406\u5750\u6807\u7cfb\u76f8\u53cd\uff0c\u7ffb\u8f6cy\u8f74\\r\\nstbi_set_flip_vertically_on_load(true);\\r\\nunsigned char* data = stbi_load(\\"data/img/test.jpg\\", &width, &height, &channels, 0);\\r\\nglTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data);\\r\\nstbi_image_free(data);\\r\\n// \u7eb9\u7406\u5750\u6807\\r\\nglEnableVertexAttribArray(1);\\r\\nglVertexAttribPointer(1, 2, GL_FLOAT, GL_FALSE, 5 * sizeof(GLfloat), (void*)(3 * sizeof(GLfloat)));\\r\\n```\\r\\n\\r\\n\u8fd0\u884c\u6548\u679c\uff1a\\r\\n\\r\\n![1637478946876](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/8b0c927d8f7dde56c3955c47c152fc98.png)\\r\\n\\r\\n\\r\\n\\r\\n## \u73af\u7ed5\u65b9\u5f0f\\r\\n\\r\\n\u901a\u8fc7\u8bbe\u7f6e`GL_TEXTURE_WRAP_`\u53c2\u6570\u6765\u8bbe\u7f6e\u73af\u7ed5\u65b9\u5f0f\\r\\n\\r\\n- `GL_REPEAT`: \u8d85\u51fa\u7eb9\u7406\u8303\u56f4\u7684\u5750\u6807\u6574\u6570\u90e8\u5206\u88ab\u5ffd\u7565\uff0c\u5f62\u6210\u91cd\u590d\u6548\u679c\u3002\\r\\n\\r\\n- `GL_MIRRORED_REPEAT`: \u8d85\u51fa\u7eb9\u7406\u8303\u56f4\u7684\u5750\u6807\u6574\u6570\u90e8\u5206\u88ab\u5ffd\u7565\uff0c\u4f46\u5f53\u6574\u6570\u90e8\u5206\u4e3a\u5947\u6570\u65f6\u8fdb\u884c\u53d6\u53cd\uff0c\u5f62\u6210\u955c\u50cf\u6548\u679c\u3002\\r\\n\\r\\n- `GL_CLAMP_TO_EDGE`: \u8d85\u51fa\u7eb9\u7406\u8303\u56f4\u7684\u5750\u6807\u88ab\u622a\u53d6\u62100\u548c1\uff0c\u5f62\u6210\u7eb9\u7406\u8fb9\u7f18\u5ef6\u4f38\u7684\u6548\u679c\u3002\\r\\n\\r\\n- `GL_CLAMP_TO_BORDER`:  \u8d85\u51fa\u7eb9\u7406\u8303\u56f4\u7684\u90e8\u5206\u88ab\u8bbe\u7f6e\u4e3a\u8fb9\u7f18\u8272\u3002\\r\\n\\r\\n\\r\\n\\r\\n\u5982\u679c\u5c06\u7eb9\u7406\u5750\u6807\u6539\u6210\u5982\u4e0b:\\r\\n\\r\\n```c++\\r\\nconst GLfloat g_vertex_buffer_data[] = {\\r\\n    -0.5f, -0.5f, 0.0f, 0.0f, 0.0f,    // \u5de6\u4e0b\u89d2\\r\\n    0.5f, -0.5f, 0.0f,  2.0f, 0.0f,    // \u53f3\u4e0b\u89d2\\r\\n    -0.5f, 0.5f, 0.0f,  0.0f, 2.0f,    // \u5de6\u4e0a\u89d2\\r\\n    0.5f, 0.5f, 0.0f,   2.0f, 2.0f     // \u53f3\u4e0a\u89d2\\r\\n};\\r\\n```\\r\\n\\r\\n\u4e0d\u540c\u73af\u7ed5\u65b9\u5f0f\u5bf9\u5e94\u7684\u6548\u679c:\\r\\n\\r\\nGL_REPEAT\\r\\n\\r\\n![11](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/8584304f0436687612292cb33ae09398.png)\\r\\n\\r\\n---\\r\\n\\r\\nGL_MIRRORED_REPEAT\\r\\n\\r\\n![222](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/eb72316da29dc70f706915510134e249.png)\\r\\n\\r\\n---\\r\\n\\r\\nGL_CLAMP_TO_EDGE\\r\\n\\r\\n![333](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/4c7b53d0f1df36e720ff66a1055eaf64.png)\\r\\n\\r\\n---\\r\\n\\r\\nGL_CLAMP_TO_BORDER\\r\\n\\r\\n![444](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/99d5651bbf052ab5d6a9d51e68755122.png)"},{"id":"/04.OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf","metadata":{"permalink":"/blog/04.OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf","source":"@site/blog/04.OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf.md","title":"OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf","description":"\u5e38\u89c1\u7684\u5750\u6807\u7cfb\u7edf","date":"2021-11-20T21:16:27.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"},{"inline":true,"label":"\u5750\u6807\u7cfb","permalink":"/blog/tags/\u5750\u6807\u7cfb"}],"readingTime":1.37,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf","date":"2021-11-20T21:16:27.000Z","authors":"sumcai","permalink":"/opengl/coordinate/","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840","\u5750\u6807\u7cfb"]},"unlisted":false,"prevItem":{"title":"OpenGL\u7eb9\u7406","permalink":"/blog/05.OpenGL\u7eb9\u7406"},"nextItem":{"title":"\u6d45\u8c08VAO\u3001VBO\u3001VEO","permalink":"/blog/03.\u6d45\u8c08VAO\u3001VBO\u3001VEO"}},"content":"## \u5e38\u89c1\u7684\u5750\u6807\u7cfb\u7edf\\r\\n\\r\\nopengl\u7684\u5750\u6807\u7cfb\u7528\u4e00\u5f20\u56fe\u6982\u8981\u8bf4\u660e\\r\\n\\r\\n![1637416960591](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/2f524724f059a8a20ae0c933e541a0fc.png)\\r\\n\\r\\n### \u4e16\u754c\u5750\u6807\u7cfb\\r\\n\\r\\n \u5728 OpenGL \u4e2d\uff0c3D\u4e16\u754c\u5750\u6807\u7cfb\u91c7\u7528\u7684\u662f\u53f3\u624b\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u3002 \\r\\n\\r\\n![1637416191561](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/ecb4a55ead119d5928c36cddb0999b5a.png)\\r\\n\\r\\n###  \u5c4f\u5e55\u5750\u6807\u7cfb \\r\\n\\r\\n\u5c4f\u5e55\u5750\u6807\u7cfb\uff0c\u5927\u90e8\u5206\u662f\u4ee5\u5de6\u4e0a\u89d2\u4e3a\u539f\u70b9\uff080\uff0c0\uff09\u7684\u3002 \u4ee3\u8868\u7684\u64cd\u4f5c\u7cfb\u7edf\u6709Windows\uff0cAndroid\uff0cSymbian\uff0ciOS \u7684Core Graphics\u3002\\r\\n\\r\\n### OpenGL 2D\u5750\u6807\u7cfb\\r\\n\\r\\n OpenGL\u7ed8\u5236\u65f6\u91c7\u7528NDC\u5750\u6807\u7cfb\uff0cNDC\u5c31\u662f\u8bbe\u5907\u6807\u51c6\u5316\u5750\u6807\u7cfb \uff0c \u539f\u70b9\u5728\u5c4f\u5e55\u4e2d\u5fc3\uff0c\u5750\u6807\u8303\u56f4[-1\uff0c1]\\r\\n\\r\\n![1637415339038](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/bb5f6489c26630c49f7215bda6d21ab8.png)\\r\\n\\r\\n### \u7a97\u53e3\u5750\u6807\u7cfb\\r\\n\\r\\n\u4e5f\u53eb\u89c6\u53e3\u5750\u6807\u7cfb\uff0c \u539f\u70b9\u5728\u5de6\u4e0b\u89d2\uff0cX\u3001Y \u8f74\u5206\u522b\u5411\u53f3\u548c\u5411\u4e0a\uff0c\u91c7\u7528\u548c\u5c4f\u5e55\u5750\u6807\u4e00\u6837\u7684\u50cf\u7d20\u8ba1\u7b97\u957f\u5ea6\u3002 \u5728 OpenGL \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u63a5\u53e3 glViewport \u8bbe\u7f6e\u89c6\u53e3 \\r\\n\\r\\n![1637416580747](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/e9e646c59ba2e6efd398d8d6765187c1.png)\\r\\n\\r\\n### \u7eb9\u7406\u5750\u6807\u7cfb\\r\\n\\r\\n\u7eb9\u7406\u5750\u6807\u7684\u539f\u70b9\u5728\u7eb9\u7406\u5de6\u4e0b\u89d2\uff0c`x`\u8f74\u5411\u53f3\uff0c`y`\u8f74\u5411\u4e0a\uff0c`x`\u548c`y`\u7684\u53d6\u503c\u8303\u56f4\u90fd\u662f0\u52301\u3002 \\r\\n\\r\\n![1637415544184](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/58e9b249068cf37e5ad5e1e93056ebb4.png)\\r\\n\\r\\n### \u56fe\u7247\u5750\u6807\u7cfb\\r\\n\\r\\n\u56fe\u7247\u5750\u6807\u7cfb\u7684\u539f\u70b9\u5728\u56fe\u7247\u5de6\u4e0a\u89d2\uff0c`x`\u8f74\u5411\u53f3\uff0c`y`\u8f74\u5411\u4e0b\uff0c`x`\u548c`y`\u7684\u53d6\u503c\u8303\u56f4\u90fd\u662f0\u5230\u5bf9\u5e94\u7684\u56fe\u7247\u5bbd\u9ad8\u3002 \\r\\n\\r\\n![1637415525917](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/4441ece5077a11c6903dfbaf0adc7f89.png)"},{"id":"/03.\u6d45\u8c08VAO\u3001VBO\u3001VEO","metadata":{"permalink":"/blog/03.\u6d45\u8c08VAO\u3001VBO\u3001VEO","source":"@site/blog/03.\u6d45\u8c08VAO\u3001VBO\u3001VEO.md","title":"\u6d45\u8c08VAO\u3001VBO\u3001VEO","description":"\u6982\u5ff5\u8bf4\u660e","date":"2021-11-18T07:35:01.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"}],"readingTime":4.485,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"\u6d45\u8c08VAO\u3001VBO\u3001VEO","date":"2021-11-18T07:35:01.000Z","authors":"sumcai","permalink":"/opengl/vertex/","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840"]},"unlisted":false,"prevItem":{"title":"OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf","permalink":"/blog/04.OpenGL\u4e2d\u7684\u5750\u6807\u7cfb\u7edf"},"nextItem":{"title":"\u6536\u96c6\u7684OpenGL\u8d44\u6e90","permalink":"/blog/01.\u6536\u96c6\u7684OpenGL\u8d44\u6e90"}},"content":"## \u6982\u5ff5\u8bf4\u660e\\r\\n\\r\\n\u5728opengl\u4e2d\uff0cVAO,VBO,VEO\u90fd\u662f\u5b58\u50a8\u9876\u70b9\u6570\u636e\u7684\u7f13\u51b2\u5bf9\u8c61\uff0c\u89e3\u91ca\u5982\u4e0b\uff1a\\r\\n\\r\\n- \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61\uff1aVertex Array Object\uff0cVAO\\r\\n- \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\uff1aVertex Buffer Object\uff0cVBO\\r\\n- \u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61\uff1aElement Buffer Object\uff0cEBO\u6216Index Buffer Object\uff0cIBO\\r\\n\\r\\n\\r\\n\\r\\n\u8fd9\u4e09\u4e2a\u7f13\u51b2\u5bf9\u8c61\u7684\u5173\u7cfb\u56fe\uff1a\\r\\n\\r\\n![1635954045960](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/3c91e78070193e053a8588f8f91c6939.png)\\r\\n\\r\\n### \u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(VAO)\\r\\n\\r\\n\u9876\u70b9\u6570\u7ec4\u5bf9\u8c61(Vertex Array Object, VAO)\u53ef\u4ee5\u50cf\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u90a3\u6837\u88ab\u7ed1\u5b9a\uff0c\u4efb\u4f55\u968f\u540e\u7684\u9876\u70b9\u5c5e\u6027\u8c03\u7528\u90fd\u4f1a\u50a8\u5b58\u5728\u8fd9\u4e2aVAO\u4e2d\u3002\u8fd9\u6837\u7684\u597d\u5904\u5c31\u662f\uff0c\u5f53\u914d\u7f6e\u9876\u70b9\u5c5e\u6027\u6307\u9488\u65f6\uff0c\u4f60\u53ea\u9700\u8981\u5c06\u90a3\u4e9b\u8c03\u7528\u6267\u884c\u4e00\u6b21\uff0c\u4e4b\u540e\u518d\u7ed8\u5236\u7269\u4f53\u7684\u65f6\u5019\u53ea\u9700\u8981\u7ed1\u5b9a\u76f8\u5e94\u7684VAO\u5c31\u884c\u4e86\u3002\u8fd9\u4f7f\u5728\u4e0d\u540c\u9876\u70b9\u6570\u636e\u548c\u5c5e\u6027\u914d\u7f6e\u4e4b\u95f4\u5207\u6362\u53d8\u5f97\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u8981\u7ed1\u5b9a\u4e0d\u540c\u7684VAO\u5c31\u884c\u4e86\u3002\\r\\n\\r\\n\\r\\n\\r\\n### \u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(VBO)\\r\\n\\r\\n\u6211\u4eec\u901a\u8fc7\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61(Vertex Buffer Objects, VBO)\u7ba1\u7406\u5185\u5b58\uff0c\u5b83\u4f1a\u5728GPU\u5185\u5b58(\u901a\u5e38\u88ab\u79f0\u4e3a\u663e\u5b58)\u4e2d\u50a8\u5b58\u5927\u6279\u9876\u70b9\u3002\u4f7f\u7528\u8fd9\u4e9b\u7f13\u51b2\u5bf9\u8c61\u7684\u597d\u5904\u662f\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u6027\u7684\u53d1\u9001\u4e00\u5927\u6279\u6570\u636e\u5230\u663e\u5361\u4e0a\uff0c\u800c\u4e0d\u662f\u6bcf\u4e2a\u9876\u70b9\u53d1\u9001\u4e00\u6b21\u3002 \\r\\n\\r\\n\\r\\n\\r\\n### \u7d22\u5f15\u7f13\u51b2\u5bf9\u8c61(EBO)\\r\\n\\r\\n\u548c\u9876\u70b9\u7f13\u51b2\u5bf9\u8c61\u4e00\u6837\uff0cEBO\u4e5f\u662f\u4e00\u4e2a\u7f13\u51b2\uff0c\u5b83\u4e13\u95e8\u50a8\u5b58\u7d22\u5f15\uff0cOpenGL\u8c03\u7528\u8fd9\u4e9b\u9876\u70b9\u7684\u7d22\u5f15\u6765\u51b3\u5b9a\u8be5\u7ed8\u5236\u54ea\u4e2a\u9876\u70b9\u3002 \\r\\n\\r\\n\\r\\n\\r\\n## \u4e09\u8005\u5173\u7cfb\\r\\n\\r\\n**\u53ef\u4ee5\u7406\u89e3\u4e3aVBO\u5c31\u662f\u663e\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u533a\u57df\uff0c\u53ef\u4ee5\u4fdd\u6301\u5927\u91cf\u7684\u9876\u70b9\u5c5e\u6027\u4fe1\u606f**\u3002\u5e76\u4e14\u53ef\u4ee5\u5f00\u8f9f\u5f88\u591a\u4e2aVBO\uff0c\u6bcf\u4e2aVBO\u5728OpenGL\u4e2d\u6709\u5b83\u7684\u552f\u4e00\u6807\u8bc6ID\uff0c\u8fd9\u4e2aID\u5bf9\u5e94\u7740\u5177\u4f53\u7684VBO\u7684\u663e\u5b58\u5730\u5740\uff0c\u901a\u8fc7\u8fd9\u4e2aID\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7684VBO\u5185\u7684\u6570\u636e\u8fdb\u884c\u5b58\u53d6\u64cd\u4f5c\u3002 \\r\\n\\r\\n**VAO\u662f\u4e00\u4e2a\u4fdd\u5b58\u4e86\u6240\u6709\u9876\u70b9\u6570\u636e\u5c5e\u6027\u7684\u72b6\u6001\u7ed3\u5408\uff0c\u5b83\u5b58\u50a8\u4e86\u9876\u70b9\u6570\u636e\u7684\u683c\u5f0f\u4ee5\u53ca\u9876\u70b9\u6570\u636e\u6240\u9700\u7684VBO\u5bf9\u8c61\u7684\u5f15\u7528**\u3002VAO\u672c\u8eab\u5e76\u6ca1\u6709\u5b58\u50a8\u9876\u70b9\u7684\u76f8\u5173\u5c5e\u6027\u6570\u636e\uff0c\u8fd9\u4e9b\u4fe1\u606f\u662f\u5b58\u50a8\u5728VBO\u4e2d\u7684\uff0cVAO\u76f8\u5f53\u4e8e\u662f\u5bf9\u5f88\u591a\u4e2aVBO\u7684\u5f15\u7528\uff0c\u628a\u4e00\u4e9bVBO\u7ec4\u5408\u5728\u4e00\u8d77\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u7edf\u4e00\u7ba1\u7406\u3002\\r\\n\\r\\n**EBO\u4e2d\u5b58\u50a8\u7684\u5185\u5bb9\u5c31\u662f\u9876\u70b9\u4f4d\u7f6e\u7684\u7d22\u5f15indices\uff0cEBO\u8ddfVBO\u7c7b\u4f3c\uff0c\u4e5f\u662f\u5728\u663e\u5b58\u4e2d\u7684\u4e00\u5757\u5185\u5b58\u7f13\u51b2\u5668**\uff0c\u53ea\u4e0d\u8fc7EBO\u4fdd\u5b58\u7684\u662f\u9876\u70b9\u7684\u7d22\u5f15\u3002 \\r\\n\\r\\n## \u793a\u4f8b\u4ee3\u7801\\r\\n\\r\\n```c++\\r\\nconst GLfloat g_vertex_buffer_data[] = {\\r\\n    -1.0f, -1.0f, 0.0f,     // \u5de6\u4e0b\u89d2\\r\\n    1.0f, -1.0f, 0.0f,      // \u53f3\u4e0b\u89d2\\r\\n    0.0f, 0.0f, 0.0f,       // \u4e2d\u95f4\u70b9\\r\\n    -1.0f, 1.0f, 0.0f,      // \u5de6\u4e0a\u89d2\\r\\n    1.0f, 1.0f, 0.0f        // \u53f3\u4e0a\u89d2\\r\\n};\\r\\n\\r\\nunsigned int indices1[] = {0, 1, 2};\\r\\nunsigned int indices2[] = {2, 3, 4};\\r\\n\\r\\n// VAO1\u3001VBO1\u3001EBO1\u7684\u6570\u636e\\r\\nGLuint VAO1;\\r\\nGLuint VBO1;\\r\\nGLuint EBO1;\\r\\nglGenVertexArrays(1, &VAO1);\\r\\nglBindVertexArray(VAO1);\\r\\n\\r\\nglGenBuffers(1, &VBO1);\\r\\nglBindBuffer(GL_ARRAY_BUFFER, VBO1);\\r\\nglBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n\\r\\nglGenBuffers(1, &EBO1);\\r\\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO1);\\r\\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices1), indices1, GL_STATIC_DRAW);\\r\\n\\r\\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, (void*)0);\\r\\nglEnableVertexAttribArray(0);\\r\\n\\r\\n\\r\\n// VAO2\u3001VBO2\u3001EBO2\u7684\u6570\u636e\\r\\nGLuint VAO2;\\r\\nGLuint VBO2;\\r\\nGLuint EBO2;\\r\\nglGenVertexArrays(1, &VAO2);\\r\\nglBindVertexArray(VAO2);\\r\\n\\r\\nglGenBuffers(1, &VBO2);\\r\\nglBindBuffer(GL_ARRAY_BUFFER, VBO2);\\r\\nglBufferData(GL_ARRAY_BUFFER, sizeof(g_vertex_buffer_data), g_vertex_buffer_data, GL_STATIC_DRAW);\\r\\n\\r\\nglGenBuffers(1, &EBO2);\\r\\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO2);\\r\\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices2), indices2, GL_STATIC_DRAW);\\r\\n\\r\\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, (void*)0);\\r\\nglEnableVertexAttribArray(0);\\r\\n\\r\\nglClearColor( 0, 0, 0.4, 0 );\\r\\nglClear( GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT );\\r\\n\\r\\n// \u7ed1\u5b9aVAO1\\r\\nglBindVertexArray(1);\\r\\nglDrawElements(GL_TRIANGLES, 3, GL_UNSIGNED_INT, 0);\\r\\n\\r\\n// \u7ed1\u5b9aVAO2\\r\\nglBindVertexArray(2);\\r\\nglDrawElements(GL_TRIANGLES, 3, GL_UNSIGNED_INT, 0);\\r\\n```\\r\\n\\r\\n\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u9996\u5148\u8bbe\u7f6e\u597dVAO1\u3001VAO2\u7684\u7f13\u51b2\u6570\u636e\uff0cVAO\u4e2d\u5206\u522b\u7ed1\u5b9a\u5bf9\u5e94\u7684VBO\u3001EBO\uff0c\u540e\u9762\u5728\u7ed8\u5236\u524d\u76f4\u63a5\u7ed1\u5b9a\u5bf9\u5e94\u7684VAO\u5373\u53ef\u3002\\r\\n\\r\\n## \u7b80\u5355\u7684\u7ed8\u5236\u65b9\u5f0f\\r\\n\\r\\n\u5982\u679c\u7ed9\u4e86\u4e00\u7ec4\u9876\u70b9\u4fe1\u606f\uff0c\u53ef\u4f7f\u7528\u4e0b\u9762\u7684\u4e24\u79cd\u65b9\u5f0f\u7ed8\u5236\uff0c\u4e24\u79cd\u65b9\u5f0f\u662f\u7b49\u6548\u7684\uff1a\\r\\n\\r\\n```c++\\r\\nconst GLfloat points[] = {\\r\\n    -1.0f, -1.0f, 0.0f,     // \u5de6\u4e0b\u89d2\\r\\n    1.0f, -1.0f, 0.0f,      // \u53f3\u4e0b\u89d2\\r\\n    0.0f, 0.0f, 0.0f,       // \u4e2d\u95f4\u70b9\\r\\n};\\r\\n// \u65b9\u5f0f\u4e00\\r\\nglEnableVertexAttribArray(0);\\r\\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 0, points);\\r\\nglDrawArrays(GL_TRIANGLES, 0, 3);\\r\\nglDisableVertexAttribArray(0);\\r\\n\\r\\n// \u65b9\u5f0f\u4e8c\\r\\nglEnableClientState(GL_VERTEX_ARRAY);\\r\\nglVertexPointer(3, GL_FLOAT, 0, points);\\r\\nglDrawArrays(GL_TRIANGLES, 0, 3);\\r\\nglDisableClientState(GL_VERTEX_ARRAY);\\r\\n```"},{"id":"/01.\u6536\u96c6\u7684OpenGL\u8d44\u6e90","metadata":{"permalink":"/blog/01.\u6536\u96c6\u7684OpenGL\u8d44\u6e90","source":"@site/blog/01.\u6536\u96c6\u7684OpenGL\u8d44\u6e90.md","title":"\u6536\u96c6\u7684OpenGL\u8d44\u6e90","description":"\u6536\u96c6\u7684OpenGL\u8d44\u6e90","date":"2021-11-02T22:54:31.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"}],"readingTime":0.26,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"\u6536\u96c6\u7684OpenGL\u8d44\u6e90","date":"2021-11-02T22:54:31.000Z","authors":"sumcai","permalink":"/opengl/resource/","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840"]},"unlisted":false,"prevItem":{"title":"\u6d45\u8c08VAO\u3001VBO\u3001VEO","permalink":"/blog/03.\u6d45\u8c08VAO\u3001VBO\u3001VEO"},"nextItem":{"title":"\u642d\u5efaOpenGL\u5f00\u53d1\u73af\u5883","permalink":"/blog/02.\u642d\u5efaOpenGL\u5f00\u53d1\u73af\u5883"}},"content":"## \u6536\u96c6\u7684OpenGL\u8d44\u6e90\\r\\n\\r\\n[OpenGL\u5b98\u65b9\u6307\u5f15]( https://www.khronos.org/opengl/wiki/Getting_Started)\\r\\n\\r\\n[ZwqXin](http://www.zwqxin.com/)\\r\\n\\r\\n[LearnOpenGL\u4e2d\u6587\u6559\u7a0b](https://learnopengl-cn.github.io/)\\r\\n\\r\\n[NVIDIA GPU Gems](https://developer.nvidia.com/gpugems/gpugems/contributors)\\r\\n\\r\\n[\u732a\u609f\u80fd\'S\u535a\u5ba2](https://www.cnblogs.com/hackpig/tag/OpenGL/)\\r\\n\\r\\n[OpenGL\u6838\u5fc3\u6280\u672f](https://blog.csdn.net/jxw167/column/info/14637)\\r\\n\\r\\n[GLSL\u4e2d\u6587\u624b\u518c](https://github.com/sumcai/GLSL-Card)\\r\\n\\r\\n[Physically Based Rendering](https://pbr-book.org/3ed-2018/contents)\\r\\n\\r\\n[Tutors example](https://user.xmission.com/~nate/tutors.html)\\r\\n\\r\\n\u672a\u5b8c\u5f85\u7eed~"},{"id":"/02.\u642d\u5efaOpenGL\u5f00\u53d1\u73af\u5883","metadata":{"permalink":"/blog/02.\u642d\u5efaOpenGL\u5f00\u53d1\u73af\u5883","source":"@site/blog/02.\u642d\u5efaOpenGL\u5f00\u53d1\u73af\u5883.md","title":"\u642d\u5efaOpenGL\u5f00\u53d1\u73af\u5883","description":"\u4ece\u642d\u5efa\u73af\u5883\u5f00\u59cb","date":"2021-11-01T23:56:39.000Z","tags":[{"inline":true,"label":"opengl\u57fa\u7840","permalink":"/blog/tags/opengl\u57fa\u7840"}],"readingTime":1.24,"hasTruncateMarker":false,"authors":[{"name":"\u82cf\u660e\u624d","title":"Vulkan\u9a71\u52a8\u586b\u5751\u72ee","url":"https://github.com/sumcai","email":"sumcai@163.com","page":{"permalink":"/blog/authors/sumcai"},"description":"\u6709\u4efb\u4f55\u95ee\u9898\uff0c\u8bf7\u8054\u7cfb sumcai@163.com","socials":{"github":"https://github.com/sumcai"},"imageURL":"https://avatars.githubusercontent.com/u/76768485?v=4","key":"sumcai"}],"frontMatter":{"title":"\u642d\u5efaOpenGL\u5f00\u53d1\u73af\u5883","date":"2021-11-01T23:56:39.000Z","authors":"sumcai","permalink":"/opengl/env/","categories":["opengl\u6280\u672f"],"tags":["opengl\u57fa\u7840"]},"unlisted":false,"prevItem":{"title":"\u6536\u96c6\u7684OpenGL\u8d44\u6e90","permalink":"/blog/01.\u6536\u96c6\u7684OpenGL\u8d44\u6e90"}},"content":"## \u4ece\u642d\u5efa\u73af\u5883\u5f00\u59cb\\r\\n\\r\\n\u5148\u4ece\u642d\u5efaopengl\u73af\u5883\u5f00\u59cb\u3002\u4efb\u4f55\u8bed\u8a00\u7684\u5b66\u4e60\u90fd\u4eceHello World\u5f00\u59cb\uff0c\u5b66\u4e60OpenGL\u4e5f\u4e00\u6837\uff0c\u4e0d\u8fc7\u6211\u4eec\u4e0d\u662f\u6253\u5370Hello World\uff0c\u800c\u662f\u901a\u8fc7OpenGL\u753b\u51fa\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u3002\\r\\n\\r\\n## \u51c6\u5907\u5de5\u4f5c\\r\\n\\r\\n\u7f51\u4e0a\u6709\u8bb8\u591a\u5165\u95e8\u6559\u7a0b\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u8fd9\u4e9b\u6559\u7a0b\u90fd\u4e0d\u591f\u7cbe\u7b80\uff0c\u5149\u662f\u51c6\u5907\u73af\u5883\u90fd\u8981\u8f6c\u817e\u4e00\u756a\uff0c\u51fa\u4e8e\u524d\u4eba\u683d\u6811\u540e\u4eba\u4e58\u51c9\u7684\u539f\u5219\uff0c\u6211\u51c6\u5907\u4e86\u4e00\u4e2a\u6700\u7b80\u4fbf\u7684\u914d\u7f6e\u5de5\u7a0b\uff0c\u4f7f\u7528CLion\u6216\u8005Visual Studio\u6253\u5f00\u5373\u53ef\u8fd0\u884c\u3002\u6211\u4eec\u53ea\u9700\u5173\u6ce8display\u51fd\u6570\u4e2dOpenGL\u7684\u7ed8\u5236\u8fc7\u7a0b\u5373\u53ef\uff0c\u65e0\u9700\u5173\u6ce8\u5176\u4ed6\u5982\u7a97\u53e3\u521b\u5efa\u3001\u9f20\u6807\u952e\u76d8\u63a7\u5236\u7b49\u64cd\u4f5c\u3002\\r\\n\\r\\n\\r\\n\\r\\n\u9879\u76ee\u5730\u5740\uff1ahttps://gitee.com/sumcai/opengl_tutorial\\r\\n\\r\\n## \u7ed8\u5236\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\\r\\n\\r\\n\u4f7f\u7528CLion\u6253\u5f00\u5de5\u7a0b\uff0ctoolchain\u914d\u7f6e\u597dMinGW\uff0c\u76f4\u63a5\u8fd0\u884c\u5373\u53ef\uff0c\u5982\u679c\u4f7f\u7528visual studio\uff0c\u9700\u4f7f\u7528Cmake\u751f\u6210\u89e3\u51b3\u65b9\u6848\u540e\u518d\u8fd0\u884c\uff0c\u5177\u4f53\u6b65\u9aa4\u81ea\u884c\u641c\u7d22\u3002\\r\\n\\r\\n![1635868749462](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/514c22c19a25ebfba5f03869b8ab00b2.png)\\r\\n\\r\\n\\r\\n\\r\\n\u7b2c\u4e00\u4e2a\u4e09\u89d2\u5f62\u8fd0\u884c\u6548\u679c\uff1a\\r\\n\\r\\n![1635868749462](https://objectstorage.ap-osaka-1.oraclecloud.com/n/ax0kqy8quzyr/b/bucket-blog/o/2022/04/b0fa5c33043e0581a47ed56e264148c7.png)"}]}}')}}]);